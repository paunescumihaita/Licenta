{"version":3,"file":"ApiV2.js","sourceRoot":"","sources":["../src/ApiV2.ts"],"names":[],"mappings":"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","sourcesContent":["import { JSONObject, JSONValue } from '@expo/json-file';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport concat from 'concat-stream';\nimport FormData from 'form-data';\nimport merge from 'lodash/merge';\nimport QueryString from 'querystring';\n\nimport { Config, ConnectionStatus } from './internal';\n\nexport const MAX_CONTENT_LENGTH = 100 /* MB */ * 1024 * 1024;\nexport const MAX_BODY_LENGTH = 100 /* MB */ * 1024 * 1024;\n\n// These aren't constants because some commands switch between staging and prod\nfunction _rootBaseUrl() {\n  return `${Config.api.scheme}://${Config.api.host}`;\n}\n\nfunction _apiBaseUrl() {\n  let rootBaseUrl = _rootBaseUrl();\n  if (Config.api.port) {\n    rootBaseUrl += ':' + Config.api.port;\n  }\n  return rootBaseUrl + '/--/api/v2';\n}\n\nasync function _convertFormDataToBuffer(formData: FormData): Promise<{ data: Buffer }> {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\nexport class ApiV2Error extends Error {\n  readonly name = 'ApiV2Error';\n  code: string;\n  details?: JSONValue;\n  serverStack?: string;\n  metadata?: object;\n  readonly _isApiError = true;\n\n  constructor(message: string, code: string = 'UNKNOWN') {\n    super(message);\n    this.code = code;\n  }\n}\n\ntype RequestOptions = {\n  httpMethod: 'get' | 'post' | 'put' | 'patch' | 'delete';\n  queryParameters?: QueryParameters;\n  body?: JSONObject;\n  timeout?: number;\n};\n\ntype UploadOptions = {\n  headers: any;\n  data: any;\n};\n\ntype QueryParameters = { [key: string]: string | number | boolean | null | undefined };\n\ntype APIV2ClientOptions = {\n  sessionSecret?: string;\n  accessToken?: string;\n};\n\nexport default class ApiV2Client {\n  static exponentClient: string = 'xdl';\n  sessionSecret: string | null = null;\n  accessToken: string | null = null;\n\n  static clientForUser(user?: APIV2ClientOptions | null): ApiV2Client {\n    if (user) {\n      return new ApiV2Client(user);\n    }\n\n    return new ApiV2Client();\n  }\n\n  static setClientName(name: string) {\n    ApiV2Client.exponentClient = name;\n  }\n\n  constructor(options: APIV2ClientOptions = {}) {\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    if (options.sessionSecret) {\n      this.sessionSecret = options.sessionSecret;\n    }\n  }\n\n  async getAsync(\n    methodName: string,\n    args: QueryParameters = {},\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'get',\n        queryParameters: args,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async postAsync(\n    methodName: string,\n    data?: JSONObject,\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'post',\n        body: data,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async putAsync(\n    methodName: string,\n    data: JSONObject,\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'put',\n        body: data,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async patchAsync(\n    methodName: string,\n    data: JSONObject,\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'patch',\n        body: data,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async deleteAsync(\n    methodName: string,\n    args: QueryParameters = {},\n    extraOptions?: Partial<RequestOptions>,\n    returnEntireResponse: boolean = false\n  ) {\n    return this._requestAsync(\n      methodName,\n      {\n        httpMethod: 'delete',\n        queryParameters: args,\n      },\n      extraOptions,\n      returnEntireResponse\n    );\n  }\n\n  async uploadFormDataAsync(methodName: string, formData: FormData) {\n    const options: RequestOptions = { httpMethod: 'put' };\n    const { data } = await _convertFormDataToBuffer(formData);\n    const uploadOptions: UploadOptions = {\n      headers: formData.getHeaders(),\n      data,\n    };\n    return await this._requestAsync(methodName, options, undefined, false, uploadOptions);\n  }\n\n  async _requestAsync(\n    methodName: string,\n    options: RequestOptions,\n    extraRequestOptions: Partial<RequestOptions> = {},\n    returnEntireResponse: boolean = false,\n    uploadOptions?: UploadOptions\n  ) {\n    const url = `${_apiBaseUrl()}/${methodName}`;\n    let reqOptions: AxiosRequestConfig = {\n      url,\n      method: options.httpMethod,\n      headers: {\n        'Exponent-Client': ApiV2Client.exponentClient,\n      },\n    };\n\n    // Handle auth method, prioritizing authorization tokens before session secrets\n    if (this.accessToken) {\n      reqOptions.headers['Authorization'] = `Bearer ${this.accessToken}`;\n    } else if (this.sessionSecret) {\n      reqOptions.headers['Expo-Session'] = this.sessionSecret;\n    }\n\n    // Handle qs\n    if (options.queryParameters) {\n      reqOptions.params = options.queryParameters;\n      reqOptions.paramsSerializer = QueryString.stringify;\n    }\n\n    // Handle body\n    if (options.body) {\n      reqOptions.data = options.body;\n    }\n\n    if (!extraRequestOptions.hasOwnProperty('timeout') && ConnectionStatus.isOffline()) {\n      reqOptions.timeout = 1;\n    }\n\n    reqOptions = merge({}, reqOptions, extraRequestOptions, uploadOptions, {\n      maxContentLength: MAX_CONTENT_LENGTH,\n      maxBodyLength: MAX_BODY_LENGTH,\n    });\n\n    let response;\n    let result;\n    try {\n      response = await axios.request(reqOptions);\n      result = response.data;\n    } catch (e) {\n      if (e?.response?.data?.errors?.length) {\n        result = e.response.data;\n      } else {\n        throw e;\n      }\n    }\n\n    if (result.errors && result.errors.length) {\n      const responseError = result.errors[0];\n      const error = new ApiV2Error(responseError.message, responseError.code);\n      error.serverStack = responseError.stack;\n      error.details = responseError.details;\n      error.metadata = responseError.metadata;\n      throw error;\n    }\n\n    return returnEntireResponse ? response : result.data;\n  }\n}\n"]}