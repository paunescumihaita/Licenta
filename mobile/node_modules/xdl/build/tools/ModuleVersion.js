"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const latest_version_1 = __importDefault(require("latest-version"));
const p_timeout_1 = __importDefault(require("p-timeout"));
const package_json_1 = __importDefault(require("package-json"));
const semver_1 = __importDefault(require("semver"));
const internal_1 = require("../internal");
/** @deprecated just use the update-check npm package */
function createModuleVersionChecker(name, currentVersion) {
    const UpdateCacher = new internal_1.FsCache.Cacher(async () => {
        const pkgJson = await p_timeout_1.default(package_json_1.default(name, { version: currentVersion }), 2000);
        return {
            latestVersion: await p_timeout_1.default(latest_version_1.default(name), 2000),
            deprecated: pkgJson.deprecated,
        };
    }, `${name}-updates.json`, 24 * 60 * 60 * 1000 // one day
    );
    async function checkAsync() {
        const { latestVersion, deprecated } = await UpdateCacher.getAsync();
        return {
            updateIsAvailable: semver_1.default.gt(latestVersion, currentVersion),
            latest: latestVersion,
            current: currentVersion,
            deprecated,
        };
    }
    return { checkAsync };
}
exports.createModuleVersionChecker = createModuleVersionChecker;
//# sourceMappingURL=ModuleVersion.js.map