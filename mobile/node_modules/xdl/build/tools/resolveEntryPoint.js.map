{"version":3,"file":"resolveEntryPoint.js","sourceRoot":"","sources":["../../src/tools/resolveEntryPoint.ts"],"names":[],"mappings":";;;;;AACA,8CAAmD;AACnD,gDAAwB;AAExB,MAAM,kBAAkB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AAErD,SAAgB,iBAAiB,CAC/B,WAAmB,EACnB,QAAiB,EACjB,aAA6B;IAE7B,IAAI,QAAQ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACtD,MAAM,IAAI,KAAK,CACb,6DAA6D,QAAQ,qBAAqB,CAC3F,CAAC;KACH;IACD,wEAAwE;IACxE,sEAAsE;IACtE,MAAM,SAAS,GAAa,EAAE,CAAC;IAE/B,MAAM,KAAK,GAAG,qBAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;IAChF,IAAI,CAAC,KAAK;QACR,MAAM,IAAI,KAAK,CACb,gMAAgM,CACjM,CAAC;IAEJ,OAAO,cAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AArBD,8CAqBC","sourcesContent":["import { ProjectConfig } from '@expo/config';\nimport { getEntryPoint } from '@expo/config/paths';\nimport path from 'path';\n\nconst supportedPlatforms = ['ios', 'android', 'web'];\n\nexport function resolveEntryPoint(\n  projectRoot: string,\n  platform?: string,\n  projectConfig?: ProjectConfig\n): string {\n  if (platform && !supportedPlatforms.includes(platform)) {\n    throw new Error(\n      `Failed to resolve the project's entry file: The platform \"${platform}\" is not supported.`\n    );\n  }\n  // TODO: Bacon: support platform extension resolution like .ios, .native\n  // const platforms = [platform, 'native'].filter(Boolean) as string[];\n  const platforms: string[] = [];\n\n  const entry = getEntryPoint(projectRoot, ['./index'], platforms, projectConfig);\n  if (!entry)\n    throw new Error(\n      `The project entry file could not be resolved. Please either define it in the \\`package.json\\` (main), \\`app.json\\` (expo.entryPoint), create an \\`index.js\\`, or install the \\`expo\\` package.`\n    );\n\n  return path.relative(projectRoot, entry);\n}\n"]}