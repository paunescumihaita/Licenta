{"version":3,"file":"ModuleVersion.js","sourceRoot":"","sources":["../../src/tools/ModuleVersion.ts"],"names":[],"mappings":";;;;;AAAA,oEAAgD;AAChD,0DAAiC;AACjC,gEAA0C;AAC1C,oDAA4B;AAE5B,0CAAsC;AAEtC,wDAAwD;AACxD,SAAS,0BAA0B,CAAC,IAAY,EAAE,cAAsB;IACtE,MAAM,YAAY,GAAG,IAAI,kBAAO,CAAC,MAAM,CACrC,KAAK,IAAI,EAAE;QACT,MAAM,OAAO,GAAG,MAAM,mBAAQ,CAAC,sBAAc,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACxF,OAAO;YACL,aAAa,EAAE,MAAM,mBAAQ,CAAC,wBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;YAC7D,UAAU,EAAE,OAAO,CAAC,UAAU;SAC/B,CAAC;IACJ,CAAC,EACD,GAAG,IAAI,eAAe,EACtB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU;KAC/B,CAAC;IAEF,KAAK,UAAU,UAAU;QACvB,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,MAAM,YAAY,CAAC,QAAQ,EAAE,CAAC;QACpE,OAAO;YACL,iBAAiB,EAAE,gBAAM,CAAC,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC;YAC3D,MAAM,EAAE,aAAa;YACrB,OAAO,EAAE,cAAc;YACvB,UAAU;SACX,CAAC;IACJ,CAAC;IAED,OAAO,EAAE,UAAU,EAAE,CAAC;AACxB,CAAC;AAEQ,gEAA0B","sourcesContent":["import latestVersionAsync from 'latest-version';\nimport pTimeout from 'p-timeout';\nimport npmPackageJson from 'package-json';\nimport semver from 'semver';\n\nimport { FsCache } from '../internal';\n\n/** @deprecated just use the update-check npm package */\nfunction createModuleVersionChecker(name: string, currentVersion: string) {\n  const UpdateCacher = new FsCache.Cacher(\n    async () => {\n      const pkgJson = await pTimeout(npmPackageJson(name, { version: currentVersion }), 2000);\n      return {\n        latestVersion: await pTimeout(latestVersionAsync(name), 2000),\n        deprecated: pkgJson.deprecated,\n      };\n    },\n    `${name}-updates.json`,\n    24 * 60 * 60 * 1000 // one day\n  );\n\n  async function checkAsync() {\n    const { latestVersion, deprecated } = await UpdateCacher.getAsync();\n    return {\n      updateIsAvailable: semver.gt(latestVersion, currentVersion),\n      latest: latestVersion,\n      current: currentVersion,\n      deprecated,\n    };\n  }\n\n  return { checkAsync };\n}\n\nexport { createModuleVersionChecker };\n"]}