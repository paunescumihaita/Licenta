{"version":3,"file":"ImageUtils.js","sourceRoot":"","sources":["../../src/tools/ImageUtils.ts"],"names":[],"mappings":";;;;;AAAA,4CAAoB;AACpB,gDAAwB;AACxB,wEAA8C;AAE9C,0CAA0D;AAE1D;;;;GAIG;AACH,KAAK,UAAU,uBAAuB,CACpC,cAAsB,EACtB,QAAgB;IAEhB,IAAI;QACF,OAAO,MAAM,wBAAwB,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;KACjE;IAAC,WAAM,GAAE;IACV,OAAO,IAAI,CAAC;AACd,CAAC;AAoEC,0DAAuB;AAlEzB,KAAK,UAAU,sCAAsC,CACnD,cAAsB,EACtB,QAAgB;IAEhB,MAAM,SAAS,GAAG,cAAI,CAAC,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IACzD,MAAM,UAAU,GAAG,YAAE,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;IAClD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,0BAAc,CAAC,UAAU,CAAC,CAAC;IAC3D,UAAU,CAAC,OAAO,EAAE,CAAC;IACrB,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AAC3B,CAAC;AAED,IAAI,UAAU,GAAG,KAAK,CAAC;AACvB,KAAK,UAAU,gBAAgB,CAC7B,UAAkB,EAClB,YAAoB,EACpB,mBAA2B;IAE3B,IACE,OAAO,CAAC,QAAQ,KAAK,QAAQ;QAC7B,iBAAiB,KAAK,yBAAyB;QAC/C,CAAC,UAAU,EACX;QACA,uBAAY,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;QACzE,UAAU,GAAG,IAAI,CAAC;KACnB;IACD,OAAO,iBAAiB,CAAC,UAAU,EAAE,YAAY,EAAE,mBAAmB,CAAC,CAAC;AAC1E,CAAC;AAqCC,4CAAgB;AAnClB,KAAK,UAAU,yBAAyB,CACtC,UAAkB,EAClB,YAAoB,EACpB,mBAA2B;IAE3B,OAAO,wBAAa,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,OAAO,EAAE,EAAE,YAAY,CAAC,EAAE;QAC5F,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;QACtC,GAAG,EAAE,mBAAmB;KACzB,CAAC,CAAC;AACL,CAAC;AAED,sEAAsE;AACtE,IAAI,iBAAiB,GAAG,yBAAyB,CAAC;AAClD,IAAI,wBAAwB,GAG6B,sCAAsC,CAAC;AAEhG,oFAAoF;AACpF,uFAAuF;AACvF,SAAS,sBAAsB,CAC7B,EAA2F;IAE3F,iBAAiB,GAAG,EAAE,CAAC;AACzB,CAAC;AAYC,wDAAsB;AAVxB,wFAAwF;AACxF,uFAAuF;AACvF,SAAS,6BAA6B,CACpC,EAA4F;IAE5F,wBAAwB,GAAG,EAAE,CAAC;AAChC,CAAC;AAKC,sEAA6B","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport probeImageSize from 'probe-image-size';\n\nimport { ExponentTools, LoggerDetach } from '../internal';\n\n/**\n * @param {string} projectDirname\n * @param {string} basename\n * @returns {} { width: number, height: number } image dimensions or null\n */\nasync function getImageDimensionsAsync(\n  projectDirname: string,\n  basename: string\n): Promise<{ width: number; height: number } | null> {\n  try {\n    return await _getImageDimensionsAsync(projectDirname, basename);\n  } catch {}\n  return null;\n}\n\nasync function _getImageDimensionsWithImageProbeAsync(\n  projectDirname: string,\n  basename: string\n): Promise<{ width: number; height: number }> {\n  const imagePath = path.resolve(projectDirname, basename);\n  const readStream = fs.createReadStream(imagePath);\n  const { width, height } = await probeImageSize(readStream);\n  readStream.destroy();\n  return { width, height };\n}\n\nlet _hasWarned = false;\nasync function resizeImageAsync(\n  iconSizePx: number,\n  iconFilename: string,\n  destinationIconPath: string\n) {\n  if (\n    process.platform !== 'darwin' &&\n    _resizeImageAsync === _resizeImageWithSipsAsync &&\n    !_hasWarned\n  ) {\n    LoggerDetach.warn('`sips` utility may or may not work outside of macOS');\n    _hasWarned = true;\n  }\n  return _resizeImageAsync(iconSizePx, iconFilename, destinationIconPath);\n}\n\nasync function _resizeImageWithSipsAsync(\n  iconSizePx: number,\n  iconFilename: string,\n  destinationIconPath: string\n) {\n  return ExponentTools.spawnAsyncThrowError('sips', ['-Z', iconSizePx.toFixed(), iconFilename], {\n    stdio: ['ignore', 'ignore', 'inherit'], // only stderr\n    cwd: destinationIconPath,\n  });\n}\n\n// Allow us to swap out the default implementations of image functions\nlet _resizeImageAsync = _resizeImageWithSipsAsync;\nlet _getImageDimensionsAsync: (\n  dirname: string,\n  filename: string\n) => Promise<{ width: number; height: number } | null> = _getImageDimensionsWithImageProbeAsync;\n\n// Allow users to provide an alternate implementation for our image resize function.\n// This is used internally in order to use sharp instead of sips in standalone builder.\nfunction setResizeImageFunction(\n  fn: (iconSizePx: number, iconFilename: string, destinationIconPath: string) => Promise<any>\n) {\n  _resizeImageAsync = fn;\n}\n\n// Allow users to provide an alternate implementation for our image dimensions function.\n// This is used internally in order to use sharp instead of sips in standalone builder.\nfunction setGetImageDimensionsFunction(\n  fn: (dirname: string, filename: string) => Promise<{ width: number; height: number } | null>\n) {\n  _getImageDimensionsAsync = fn;\n}\n\nexport {\n  resizeImageAsync,\n  setResizeImageFunction,\n  setGetImageDimensionsFunction,\n  getImageDimensionsAsync,\n};\n"]}