{"version":3,"file":"ArtifactUtils.js","sourceRoot":"","sources":["../../src/tools/ArtifactUtils.ts"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,gDAAwB;AAExB,0CAA+C;AAExC,KAAK,UAAU,wBAAwB,CAC5C,WAAmB,EACnB,OAAsB,EACtB,YAAoB,EACpB,QAAgB;IAEhB,MAAM,WAAW,GAAG,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAC5D,IAAI,CAAC,kBAAE,CAAC,UAAU,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE;QAC7C,MAAM,QAAQ,GAAG,OAAO;YACtB,CAAC,CAAC,uBAAuB,WAAW,sCAAsC;YAC1E,CAAC,CAAC,sBAAsB,OAAO,KAAK,WAAW,sCAAsC,CAAC;QACxF,iBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9B;SAAM;QACL,MAAM,kBAAE,CAAC,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;KAC3C;AACH,CAAC;AAfD,4DAeC","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport { Logger as logger } from '../internal';\n\nexport async function writeArtifactSafelyAsync(\n  projectRoot: string,\n  keyName: string | null,\n  artifactPath: string,\n  artifact: string\n) {\n  const pathToWrite = path.resolve(projectRoot, artifactPath);\n  if (!fs.existsSync(path.dirname(pathToWrite))) {\n    const errorMsg = keyName\n      ? `app.json specifies: ${pathToWrite}, but that directory does not exist.`\n      : `app.json specifies ${keyName}: ${pathToWrite}, but that directory does not exist.`;\n    logger.global.warn(errorMsg);\n  } else {\n    await fs.writeFile(pathToWrite, artifact);\n  }\n}\n"]}