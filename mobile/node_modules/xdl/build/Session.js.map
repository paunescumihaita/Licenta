{"version":3,"file":"Session.js","sourceRoot":"","sources":["../src/Session.ts"],"names":[],"mappings":";;;;;AAAA,oDAA4B;AAE5B,yCAA0C;AAE1C,SAAS,cAAc,CAAC,IAAI,GAAG,GAAG;IAChC,OAAO,IAAI,GAAG,GAAG,GAAG,gBAAM,CAAC,EAAE,EAAE,CAAC;AAClC,CAAC;AAEM,KAAK,UAAU,aAAa;IACjC,IAAI,QAAQ,GAAG,MAAM,uBAAY,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAChE,IAAI,QAAQ,KAAK,IAAI,EAAE;QACrB,QAAQ,GAAG,cAAc,EAAE,CAAC;QAC5B,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAClC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAPD,sCAOC;AAEM,KAAK,UAAU,gBAAgB,CAAC,KAAa;IAClD,MAAM,uBAAY,CAAC,QAAQ,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IAClD,OAAO,KAAK,CAAC;AACf,CAAC;AAHD,4CAGC","sourcesContent":["import slugid from 'slugid';\n\nimport { UserSettings } from './internal';\n\nfunction _newIdentifier(type = 'c') {\n  return type + '-' + slugid.v4();\n}\n\nexport async function clientIdAsync(): Promise<string> {\n  let clientId = await UserSettings.getAsync('accessToken', null);\n  if (clientId === null) {\n    clientId = _newIdentifier();\n    await setClientIdAsync(clientId);\n  }\n  return clientId;\n}\n\nexport async function setClientIdAsync(token: string) {\n  await UserSettings.setAsync('accessToken', token);\n  return token;\n}\n"]}