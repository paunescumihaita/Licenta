{"version":3,"file":"UserSettings.js","sourceRoot":"","sources":["../src/UserSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import JsonFile from '@expo/json-file';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport uuid from 'uuid';\n\nimport { ConnectionType, Env } from './internal';\n\nexport type UserSettingsData = {\n  developmentCodeSigningId?: string;\n  appleId?: string;\n  accessToken?: string;\n  auth?: UserData | null;\n  ignoreBundledBinaries?: string[];\n  openDevToolsAtStartup?: boolean;\n  PATH?: string;\n  sendTo?: string;\n  uuid?: string;\n};\n\nexport type UserData = {\n  developmentCodeSigningId?: string;\n  appleId?: string;\n  userId?: string;\n  username?: string;\n  currentConnection?: ConnectionType;\n  sessionSecret?: string;\n};\n\nconst SETTINGS_FILE_NAME = 'state.json';\n\nfunction userSettingsFile(): string {\n  const dir = dotExpoHomeDirectory();\n  const file = path.join(dir, SETTINGS_FILE_NAME);\n  try {\n    // move exponent.json to state.json\n    const oldFile = path.join(dir, 'exponent.json');\n    if (fs.statSync(oldFile).isFile()) {\n      fs.renameSync(oldFile, file);\n    }\n  } catch (e) {\n    // no old directory, continue\n  }\n  return file;\n}\n\nfunction userSettingsJsonFile(): JsonFile<UserSettingsData> {\n  return new JsonFile<UserSettingsData>(userSettingsFile(), {\n    jsonParseErrorDefault: {},\n    cantReadFileDefault: {},\n  });\n}\n\nlet mkdirped = false;\n\nfunction dotExpoHomeDirectory() {\n  let dirPath;\n  if (process.env.__UNSAFE_EXPO_HOME_DIRECTORY) {\n    dirPath = process.env.__UNSAFE_EXPO_HOME_DIRECTORY;\n  } else {\n    const home = Env.home();\n    if (!home) {\n      throw new Error(\n        \"Can't determine your home directory; make sure your $HOME environment variable is set.\"\n      );\n    }\n\n    if (process.env.EXPO_STAGING) {\n      dirPath = path.join(home, '.expo-staging');\n    } else if (process.env.EXPO_LOCAL) {\n      dirPath = path.join(home, '.expo-local');\n    } else {\n      dirPath = path.join(home, '.expo');\n    }\n\n    try {\n      // move .exponent to .expo\n      const oldDirPath = path.join(home, '.exponent');\n      if (fs.statSync(oldDirPath).isDirectory()) {\n        fs.renameSync(oldDirPath, dirPath);\n      }\n    } catch (e) {\n      // no old directory, continue\n    }\n  }\n  if (!mkdirped) {\n    fs.mkdirpSync(dirPath);\n    mkdirped = true;\n  }\n  return dirPath;\n}\n\n// returns an anonymous, unique identifier for a user on the current computer\nasync function anonymousIdentifier(): Promise<string> {\n  const settings = await userSettingsJsonFile();\n  let id = await settings.getAsync('uuid', null);\n\n  if (!id) {\n    id = uuid.v4();\n    await settings.setAsync('uuid', id);\n  }\n\n  return id;\n}\n\nfunction accessToken(): string | null {\n  return process.env.EXPO_TOKEN || null;\n}\n\nconst UserSettings = Object.assign(userSettingsJsonFile(), {\n  dotExpoHomeDirectory,\n  userSettingsFile,\n  userSettingsJsonFile,\n  accessToken,\n  anonymousIdentifier,\n  SETTINGS_FILE_NAME,\n});\n\nexport default UserSettings;\n"]}