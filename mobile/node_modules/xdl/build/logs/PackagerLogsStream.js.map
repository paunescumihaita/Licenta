{"version":3,"file":"PackagerLogsStream.js","sourceRoot":"","sources":["../../src/logs/PackagerLogsStream.ts"],"names":[],"mappings":"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","sourcesContent":["import { JSONObject } from '@expo/json-file';\nimport chalk from 'chalk';\nimport getenv from 'getenv';\nimport path from 'path';\n\nimport { Logger, ProjectUtils } from '../internal';\n\ntype BuildEventType =\n  | 'METRO_INITIALIZE_STARTED'\n  | 'BUILD_STARTED'\n  | 'BUILD_PROGRESS'\n  | 'BUILD_FAILED'\n  | 'BUILD_DONE';\ntype MetroLogRecord = {\n  tag: 'metro';\n  id: string;\n  shouldHide: boolean;\n  msg: ReportableEvent | string;\n  level: number;\n  _metroEventType?: BuildEventType;\n};\ntype ExpoLogRecord = {\n  tag: 'expo';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n};\ntype DeviceLogRecord = {\n  tag: 'device';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n};\nexport type LogRecord = (MetroLogRecord | ExpoLogRecord | DeviceLogRecord) & ProjectUtils.LogFields;\n\nexport type LogUpdater = (logState: LogRecord[]) => LogRecord[];\n\ntype ErrorObject = {\n  name?: string;\n  stack?: string;\n  message?: string;\n  code?: string;\n} & JSONObject;\n\ntype MetroError =\n  | ({\n      originModulePath: string;\n      message: string;\n      errors: object[];\n    } & ErrorObject)\n  | ({\n      type: 'TransformError';\n      snippet: string;\n      lineNumber: number;\n      column: number;\n      filename: string;\n      errors: object[];\n    } & ErrorObject)\n  | ErrorObject;\n\n// Metro reporter types\n// https://github.com/facebook/metro/blob/2a327fb19dd62169ab3ae9069011d8a599cfcf3e/packages/metro/src/lib/reporting.js\ntype GlobalCacheDisabledReason = 'too_many_errors' | 'too_many_misses';\ntype BundleDetails = {\n  entryFile: string;\n  platform: string;\n  dev: boolean;\n  minify: boolean;\n  bundleType: string;\n};\ntype ReportableEvent =\n  | {\n      port: number | undefined;\n      projectRoots: readonly string[];\n      type: 'initialize_started';\n    }\n  | {\n      type: 'initialize_done';\n    }\n  | {\n      type: 'client_log';\n      data: any;\n    }\n  | {\n      type: 'initialize_failed';\n      port: number;\n      error: MetroError;\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_done';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_failed';\n    }\n  | {\n      buildID: string;\n      bundleDetails: BundleDetails;\n      type: 'bundle_build_started';\n    }\n  | {\n      error: MetroError;\n      type: 'bundling_error';\n    }\n  | {\n      type: 'dep_graph_loading';\n    }\n  | {\n      type: 'dep_graph_loaded';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_transform_progressed';\n      transformedFileCount: number;\n      totalFileCount: number;\n    }\n  | {\n      type: 'global_cache_error';\n      error: MetroError;\n    }\n  | {\n      type: 'global_cache_disabled';\n      reason: GlobalCacheDisabledReason;\n    }\n  | {\n      type: 'transform_cache_reset';\n    }\n  | {\n      type: 'worker_stdout_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'worker_stderr_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'hmr_client_error';\n      error: MetroError;\n    };\n\ntype StartBuildBundleCallback = (chunk: LogRecord) => void;\ntype ProgressBuildBundleCallback = (progress: number, start: Date | null, chunk: any) => void;\ntype FinishBuildBundleCallback = (\n  error: string | null,\n  start: Date,\n  end: Date,\n  chunk: MetroLogRecord\n) => void;\n\nexport default class PackagerLogsStream {\n  _projectRoot: string;\n  _getCurrentOpenProjectId: () => any;\n  _updateLogs: (updater: LogUpdater) => void;\n  _logsToAdd: LogRecord[] = [];\n  _bundleBuildChunkID: string | null = null;\n  _onStartBuildBundle?: StartBuildBundleCallback;\n  _onProgressBuildBundle?: ProgressBuildBundleCallback;\n  _onFinishBuildBundle?: FinishBuildBundleCallback;\n  _bundleBuildStart: Date | null = null;\n  _getSnippetForError?: (error: MetroError) => string | null;\n\n  constructor({\n    projectRoot,\n    getCurrentOpenProjectId,\n    updateLogs,\n    onStartBuildBundle,\n    onProgressBuildBundle,\n    onFinishBuildBundle,\n    getSnippetForError,\n  }: {\n    projectRoot: string;\n    getCurrentOpenProjectId?: () => any;\n    updateLogs: (updater: LogUpdater) => void;\n    onStartBuildBundle?: StartBuildBundleCallback;\n    onProgressBuildBundle?: ProgressBuildBundleCallback;\n    onFinishBuildBundle?: FinishBuildBundleCallback;\n    getSnippetForError?: (error: MetroError) => string | null;\n  }) {\n    this._projectRoot = projectRoot;\n    this._getCurrentOpenProjectId = getCurrentOpenProjectId || (() => 1);\n    this._updateLogs = updateLogs;\n\n    // Optional properties in case the consumer wants to handle updates on\n    // its own, eg: for a progress bar\n    this._onStartBuildBundle = onStartBuildBundle;\n    this._onProgressBuildBundle = onProgressBuildBundle;\n    this._onFinishBuildBundle = onFinishBuildBundle;\n\n    // Optional function for creating custom code frame snippet\n    // (e.g. with terminal colors) from a syntax error.\n    this._getSnippetForError = getSnippetForError;\n\n    this._attachLoggerStream();\n  }\n\n  _attachLoggerStream() {\n    const projectId = this._getCurrentOpenProjectId();\n\n    ProjectUtils.attachLoggerStream(this._projectRoot, {\n      stream: {\n        write: (chunk: LogRecord) => {\n          if (chunk.tag !== 'metro' && chunk.tag !== 'expo') {\n            return;\n          } else if (this._getCurrentOpenProjectId() !== projectId) {\n            // TODO: We should be confident that we are properly unsubscribing\n            // from the stream rather than doing a defensive check like this.\n            return;\n          }\n\n          chunk = this._maybeParseMsgJSON(chunk);\n          chunk = this._cleanUpNodeErrors(chunk);\n          if (chunk.tag === 'metro') {\n            this._handleMetroEvent(chunk);\n          } else if (\n            typeof chunk.msg === 'string' &&\n            chunk.msg.match(/\\w/) &&\n            chunk.msg[0] !== '{'\n          ) {\n            this._enqueueAppendLogChunk(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n  }\n\n  _handleMetroEvent(originalChunk: MetroLogRecord) {\n    const chunk = { ...originalChunk };\n    const { msg } = chunk;\n\n    if (typeof msg === 'string') {\n      if ((msg as string).includes('HTTP/1.1') && !getenv.boolish('EXPO_DEBUG', false)) {\n        // Do nothing with this message - we want to filter out network requests logged by Metro.\n      } else {\n        // If Metro crashes for some reason, it may log an error message as a plain string to stderr.\n        this._enqueueAppendLogChunk(chunk);\n      }\n      return;\n    }\n\n    switch (msg.type) {\n      // Bundle transform events\n      case 'bundle_build_started':\n      case 'bundle_transform_progressed':\n      case 'bundle_build_failed':\n      case 'bundle_build_done':\n        this._handleBundleTransformEvent(chunk);\n        return;\n\n      case 'initialize_started':\n        chunk._metroEventType = 'METRO_INITIALIZE_STARTED';\n        chunk.msg = 'Starting Metro Bundler';\n        break;\n      case 'initialize_done':\n        chunk.msg = `Started Metro Bundler`;\n        break;\n      case 'initialize_failed': {\n        // SDK <=22\n        const code = msg.error.code;\n        chunk.msg =\n          code === 'EADDRINUSE'\n            ? `Metro Bundler can't listen on port ${msg.port}. The port is in use.`\n            : `Metro Bundler failed to start. (code: ${code})`;\n        break;\n      }\n      case 'bundling_error':\n        chunk.msg =\n          this._formatModuleResolutionError(msg.error) ||\n          this._formatBundlingError(msg.error) ||\n          msg;\n        chunk.level = Logger.ERROR;\n        break;\n      case 'transform_cache_reset':\n        chunk.msg =\n          'Your JavaScript transform cache is empty, rebuilding (this may take a minute).';\n        break;\n      case 'hmr_client_error':\n        chunk.msg = `A WebSocket client got a connection error. Please reload your device to get HMR working again.`;\n        break;\n      case 'global_cache_disabled':\n        if (msg.reason === 'too_many_errors') {\n          chunk.msg =\n            'The global cache is now disabled because it has been failing too many times.';\n        } else if (msg.reason === 'too_many_misses') {\n          chunk.msg = `The global cache is now disabled because it has been missing too many consecutive keys.`;\n        } else {\n          chunk.msg = `The global cache is now disabled. Reason: ${msg.reason}`;\n        }\n        break;\n      case 'worker_stdout_chunk':\n        chunk.msg = this._formatWorkerChunk('stdout', msg.chunk);\n        break;\n      case 'worker_stderr_chunk':\n        chunk.msg = this._formatWorkerChunk('stderr', msg.chunk);\n        break;\n      // Ignored events.\n      case 'client_log':\n      case 'dep_graph_loading':\n      case 'dep_graph_loaded':\n      case 'global_cache_error':\n        return;\n      default:\n        chunk.msg = `Unrecognized event: ${JSON.stringify(msg)}`;\n        break;\n    }\n    this._enqueueAppendLogChunk(chunk);\n  }\n\n  // Any event related to bundle building is handled here\n  _handleBundleTransformEvent = (chunk: MetroLogRecord) => {\n    const msg = chunk.msg as ReportableEvent;\n\n    if (msg.type === 'bundle_build_started') {\n      chunk._metroEventType = 'BUILD_STARTED';\n      this._handleNewBundleTransformStarted(chunk);\n    } else if (msg.type === 'bundle_transform_progressed' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_PROGRESS';\n      this._handleUpdateBundleTransformProgress(chunk);\n    } else if (msg.type === 'bundle_build_failed' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_FAILED';\n      this._handleUpdateBundleTransformProgress(chunk);\n    } else if (msg.type === 'bundle_build_done' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_DONE';\n      this._handleUpdateBundleTransformProgress(chunk);\n    }\n  };\n\n  _handleNewBundleTransformStarted(chunk: MetroLogRecord) {\n    if (this._bundleBuildChunkID) {\n      return;\n    }\n\n    this._bundleBuildChunkID = chunk.id;\n    this._bundleBuildStart = new Date();\n    chunk.msg = 'Building JavaScript bundle';\n\n    if (this._onStartBuildBundle) {\n      this._onStartBuildBundle(chunk);\n    } else {\n      this._enqueueAppendLogChunk(chunk);\n    }\n  }\n\n  _handleUpdateBundleTransformProgress(progressChunk: MetroLogRecord) {\n    const msg = progressChunk.msg as ReportableEvent;\n\n    let percentProgress;\n    let bundleComplete = false;\n\n    if (msg.type === 'bundle_build_done') {\n      percentProgress = 100;\n      bundleComplete = true;\n      if (this._bundleBuildStart) {\n        const duration = new Date().getTime() - this._bundleBuildStart.getTime();\n        progressChunk.msg = `Building JavaScript bundle: finished in ${duration}ms.`;\n      } else {\n        progressChunk.msg = `Building JavaScript bundle: finished.`;\n      }\n    } else if (msg.type === 'bundle_build_failed') {\n      percentProgress = -1;\n      bundleComplete = true;\n      progressChunk.msg = `Building JavaScript bundle: error`;\n      progressChunk.level = Logger.ERROR;\n    } else if (msg.type === 'bundle_transform_progressed') {\n      percentProgress = Math.floor((msg.transformedFileCount / msg.totalFileCount) * 100);\n      progressChunk.msg = `Building JavaScript bundle: ${percentProgress}%`;\n    } else {\n      return;\n    }\n\n    if (this._bundleBuildChunkID) {\n      progressChunk.id = this._bundleBuildChunkID;\n    }\n\n    if (this._onProgressBuildBundle) {\n      this._onProgressBuildBundle(percentProgress, this._bundleBuildStart, progressChunk);\n\n      if (bundleComplete) {\n        if (this._onFinishBuildBundle && this._bundleBuildStart) {\n          const error = msg.type === 'bundle_build_failed' ? 'Build failed' : null;\n          this._onFinishBuildBundle(error, this._bundleBuildStart, new Date(), progressChunk);\n        }\n        this._bundleBuildStart = null;\n        this._bundleBuildChunkID = null;\n      }\n    } else {\n      this._updateLogs(logs => {\n        if (!logs || !logs.length) {\n          return [];\n        }\n\n        logs.forEach(log => {\n          if (log.id === this._bundleBuildChunkID) {\n            log.msg = progressChunk.msg;\n          }\n        });\n\n        if (bundleComplete) {\n          this._bundleBuildChunkID = null;\n        }\n\n        return [...logs];\n      });\n    }\n  }\n\n  _formatModuleResolutionError(error: MetroError): string | null {\n    if (!error.message) {\n      return null;\n    }\n    const match = /^Unable to resolve module `(.+?)`/.exec(error.message);\n    const originModulePath = error.originModulePath as string | null;\n    if (!match || !originModulePath) {\n      return null;\n    }\n    const moduleName = match[1];\n    const relativePath = path.relative(this._projectRoot, originModulePath);\n\n    const DOCS_PAGE_URL =\n      'https://docs.expo.io/workflow/using-libraries/#using-third-party-libraries';\n\n    if (NODE_STDLIB_MODULES.includes(moduleName)) {\n      if (originModulePath.includes('node_modules')) {\n        return `The package at \"${relativePath}\" attempted to import the Node standard library module \"${moduleName}\". It failed because the native React runtime does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      } else {\n        return `You attempted attempted to import the Node standard library module \"${moduleName}\" from \"${relativePath}\". It failed because the native React runtime does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      }\n    }\n    return `Unable to resolve \"${moduleName}\" from \"${relativePath}\"`;\n  }\n\n  _formatBundlingError(error: MetroError): string | null {\n    let message = error.message;\n    if (!message && Array.isArray(error.errors) && error.errors.length) {\n      message = (error.errors[0] as any).description;\n    }\n    if (!message) {\n      return null;\n    }\n\n    message = chalk.red(message);\n\n    const snippet = (this._getSnippetForError && this._getSnippetForError(error)) || error.snippet;\n    if (snippet) {\n      message += `\\n${snippet}`;\n    }\n    return message;\n  }\n\n  _formatWorkerChunk(origin: 'stdout' | 'stderr', chunk: string) {\n    const lines = chunk.split('\\n');\n    if (lines.length >= 1 && lines[lines.length - 1] === '') {\n      lines.splice(lines.length - 1, 1);\n    }\n    return lines.map(line => `transform[${origin}]: ${line}`).join('\\n');\n  }\n\n  _enqueueAppendLogChunk(chunk: LogRecord) {\n    if (!chunk.shouldHide) {\n      this._logsToAdd.push(chunk);\n      this._enqueueFlushLogsToAdd();\n    }\n  }\n\n  _enqueueFlushLogsToAdd = () => {\n    this._updateLogs(logs => {\n      if (this._logsToAdd.length === 0) {\n        return logs;\n      }\n\n      const nextLogs = logs.concat(this._logsToAdd);\n      this._logsToAdd = [];\n      return nextLogs;\n    });\n  };\n\n  _maybeParseMsgJSON(chunk: LogRecord) {\n    try {\n      const parsedMsg = JSON.parse(chunk.msg);\n      chunk.msg = parsedMsg;\n    } catch (e) {\n      // non-JSON message\n    }\n\n    return chunk;\n  }\n\n  _cleanUpNodeErrors = (chunk: LogRecord) => {\n    if (typeof chunk.msg !== 'string') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/\\(node:.\\d*\\)/)) {\n      // Example: (node:13817) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: SyntaxError /Users/brent/universe/apps/new-project-template/main.js: Unexpected token (10:6)\n      // The first part of this is totally useless, so let's remove it.\n      if (chunk.msg.match(/UnhandledPromiseRejectionWarning/)) {\n        chunk.msg = chunk.msg.replace(/\\(node:.*\\(rejection .*\\):/, '');\n        if (chunk.msg.match(/SyntaxError: SyntaxError/)) {\n          chunk.msg = chunk.msg.replace('SyntaxError: ', '');\n        }\n      } else if (chunk.msg.match(/DeprecationWarning/)) {\n        chunk.msg = '';\n      }\n    }\n\n    return chunk;\n  };\n}\n\nconst NODE_STDLIB_MODULES = [\n  'assert',\n  'async_hooks',\n  'buffer',\n  'child_process',\n  'cluster',\n  'crypto',\n  'dgram',\n  'dns',\n  'domain',\n  'events',\n  'fs',\n  'http',\n  'https',\n  'net',\n  'os',\n  'path',\n  'punycode',\n  'querystring',\n  'readline',\n  'repl',\n  'stream',\n  'string_decoder',\n  'tls',\n  'tty',\n  'url',\n  'util',\n  'v8',\n  'vm',\n  'zlib',\n];\n"]}