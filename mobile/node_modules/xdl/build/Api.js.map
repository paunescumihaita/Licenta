{"version":3,"file":"Api.js","sourceRoot":"","sources":["../src/Api.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosRequestConfig, Canceler } from 'axios';\nimport concat from 'concat-stream';\nimport FormData from 'form-data';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport {\n  API_V2_MAX_BODY_LENGTH,\n  API_V2_MAX_CONTENT_LENGTH,\n  Config,\n  ConnectionStatus,\n  Extract,\n  Session,\n  UserManager,\n  UserSettings,\n  XDLError,\n} from './internal';\n\nconst TIMER_DURATION = 30000;\nconst TIMEOUT = 3600000;\n\nlet exponentClient = 'xdl';\n\ntype HttpMethod = 'get' | 'post' | 'put' | 'delete';\ntype RequestOptions = AxiosRequestConfig & { formData?: FormData };\n\nclass ApiError extends Error {\n  readonly name = 'ApiError';\n  code: string;\n  readonly _isApiError = true;\n  serverError: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n\n// These aren't constants because some commands switch between staging and prod\nfunction _rootBaseUrl() {\n  return `${Config.api.scheme}://${Config.api.host}`;\n}\n\nfunction _apiBaseUrl() {\n  let rootBaseUrl = _rootBaseUrl();\n  if (Config.api.port) {\n    rootBaseUrl += ':' + Config.api.port;\n  }\n  return rootBaseUrl + '/--/api';\n}\n\nasync function _callMethodAsync(\n  url: string,\n  method: HttpMethod = 'get',\n  requestBody: any,\n  requestOptions: RequestOptions,\n  returnEntireResponse = false\n) {\n  const clientId = await Session.clientIdAsync();\n  const session = await UserManager.getSessionAsync();\n  const skipValidationToken = process.env['EXPO_SKIP_MANIFEST_VALIDATION_TOKEN'];\n\n  const headers: any = {\n    'Exp-ClientId': clientId,\n    'Exponent-Client': exponentClient,\n  };\n\n  if (skipValidationToken) {\n    headers['Exp-Skip-Manifest-Validation-Token'] = skipValidationToken;\n  }\n\n  // Handle auth method, prioritizing authorization tokens before session secrets\n  if (session?.accessToken) {\n    headers['Authorization'] = `Bearer ${session.accessToken}`;\n  } else if (session?.sessionSecret) {\n    headers['Expo-Session'] = session.sessionSecret;\n  }\n\n  let options: AxiosRequestConfig = {\n    url,\n    method,\n    headers,\n    maxContentLength: API_V2_MAX_CONTENT_LENGTH,\n    maxBodyLength: API_V2_MAX_BODY_LENGTH,\n  };\n\n  if (requestBody) {\n    options = {\n      ...options,\n      data: requestBody,\n    };\n  }\n\n  if (requestOptions.formData) {\n    const { formData, ...rest } = requestOptions;\n    const convertedFormData = await _convertFormDataToBuffer(formData);\n    const { data } = convertedFormData;\n    options.headers = {\n      ...options.headers,\n      ...formData.getHeaders(),\n    };\n    options = { ...options, data, ...rest };\n  } else {\n    options = { ...options, ...requestOptions };\n  }\n\n  if (!requestOptions.hasOwnProperty('timeout') && ConnectionStatus.isOffline()) {\n    options.timeout = 1;\n  }\n\n  const response = await axios.request(options);\n  if (!response) {\n    throw new Error('Unexpected error: Request failed.');\n  }\n  const responseBody = response.data;\n  let responseObj;\n  if (typeof responseBody === 'string') {\n    try {\n      responseObj = JSON.parse(responseBody);\n    } catch (e) {\n      throw new XDLError(\n        'INVALID_JSON',\n        'Invalid JSON returned from API: ' + e + '. Response body: ' + responseBody\n      );\n    }\n  } else {\n    responseObj = responseBody;\n  }\n  if (responseObj.err) {\n    const err = new ApiError(\n      responseObj.code || 'API_ERROR',\n      'API Response Error: ' + responseObj.err\n    );\n    err.serverError = responseObj.err;\n    throw err;\n  } else {\n    return returnEntireResponse ? response : responseObj;\n  }\n}\n\nasync function _convertFormDataToBuffer(formData: FormData): Promise<{ data: Buffer }> {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\ntype ProgressCallback = (progressPercentage: number) => void;\ntype RetryCallback = (cancel: Canceler) => void;\n\nasync function _downloadAsync(\n  url: string,\n  outputPath: string,\n  progressFunction?: ProgressCallback,\n  retryFunction?: RetryCallback\n) {\n  let promptShown = false;\n  let currentProgress = 0;\n\n  const { cancel, token } = axios.CancelToken.source();\n\n  let warningTimer = setTimeout(() => {\n    if (retryFunction) {\n      retryFunction(cancel);\n    }\n    promptShown = true;\n  }, TIMER_DURATION);\n\n  const tmpPath = `${outputPath}.download`;\n  const config: AxiosRequestConfig = {\n    timeout: TIMEOUT,\n    responseType: 'stream',\n    cancelToken: token,\n  };\n  const response = await axios(url, config);\n  await new Promise<void>(resolve => {\n    const totalDownloadSize = response.data.headers['content-length'];\n    let downloadProgress = 0;\n    response.data\n      .on('data', (chunk: Buffer) => {\n        downloadProgress += chunk.length;\n        const roundedProgress = Math.floor((downloadProgress / totalDownloadSize) * 100);\n        if (currentProgress !== roundedProgress) {\n          currentProgress = roundedProgress;\n          clearTimeout(warningTimer);\n          if (!promptShown) {\n            warningTimer = setTimeout(() => {\n              if (retryFunction) {\n                retryFunction(cancel);\n              }\n              promptShown = true;\n            }, TIMER_DURATION);\n          }\n          if (progressFunction) {\n            progressFunction(roundedProgress);\n          }\n        }\n      })\n      .on('end', () => {\n        clearTimeout(warningTimer);\n        if (progressFunction && currentProgress !== 100) {\n          progressFunction(100);\n        }\n        resolve();\n      })\n      .pipe(fs.createWriteStream(tmpPath));\n  });\n  await fs.rename(tmpPath, outputPath);\n}\n\n/** @deprecated use ApiV2, got or GraphQL depending on use case. */\nexport default class ApiClient {\n  static host: string = Config.api.host;\n  static port: number = Config.api.port || 80;\n\n  static setClientName(name: string) {\n    exponentClient = name;\n  }\n\n  static async callMethodAsync(\n    methodName: string,\n    args: any,\n    method?: HttpMethod,\n    requestBody?: any,\n    requestOptions: RequestOptions = {},\n    returnEntireResponse: boolean = false\n  ) {\n    const url =\n      _apiBaseUrl() +\n      '/' +\n      encodeURIComponent(methodName) +\n      '/' +\n      encodeURIComponent(JSON.stringify(args));\n    return _callMethodAsync(url, method, requestBody, requestOptions, returnEntireResponse);\n  }\n\n  static async callPathAsync(\n    path: string,\n    method?: HttpMethod,\n    requestBody?: any,\n    requestOptions: RequestOptions = {}\n  ) {\n    const url = _rootBaseUrl() + path;\n    return _callMethodAsync(url, method, requestBody, requestOptions);\n  }\n\n  static async downloadAsync(\n    url: string,\n    outputPath: string,\n    { extract = false } = {},\n    progressFunction?: ProgressCallback,\n    retryFunction?: RetryCallback\n  ): Promise<void> {\n    if (extract) {\n      const dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n      const tmpPath = path.join(dotExpoHomeDirectory, 'tmp-download-file');\n      await _downloadAsync(url, tmpPath, progressFunction);\n      await Extract.extractAsync(tmpPath, outputPath);\n      fs.removeSync(tmpPath);\n    } else {\n      await _downloadAsync(url, outputPath, progressFunction, retryFunction);\n    }\n  }\n}\n"]}