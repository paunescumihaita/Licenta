"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const spawn_async_1 = __importDefault(require("@expo/spawn-async"));
const tar_1 = __importDefault(require("tar"));
async function extractAsync(archive, dir) {
    try {
        if (process.platform !== 'win32') {
            await spawn_async_1.default('tar', ['-xf', archive, '-C', dir], {
                stdio: 'inherit',
                cwd: __dirname,
            });
            return;
        }
    }
    catch (e) {
        console.error(e.message);
    }
    // tar node module has previously had problems with big files, and seems to
    // be slower, so only use it as a backup.
    await tar_1.default.extract({ file: archive, cwd: dir });
}
exports.extractAsync = extractAsync;
//# sourceMappingURL=Extract.js.map