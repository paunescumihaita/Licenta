{"version":3,"file":"publishAsync.js","sourceRoot":"","sources":["../../src/project/publishAsync.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ExpoAppManifest,\n  ExpoConfig,\n  getDefaultTarget,\n  HookArguments,\n  PackageJSONConfig,\n} from '@expo/config';\nimport FormData from 'form-data';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport {\n  Analytics,\n  ApiV2,\n  Config,\n  createBundlesAsync,\n  Doctor,\n  EmbeddedAssets,\n  Env,\n  ExponentTools,\n  getPublishExpConfigAsync,\n  LoadedHook,\n  Logger as logger,\n  prepareHooks,\n  printBundleSizes,\n  ProjectAssets,\n  PublishOptions,\n  runHook,\n  Sentry,\n  User,\n  UserManager,\n  XDLError,\n} from '../internal';\n\nexport interface PublishedProjectResult {\n  /**\n   * Project manifest URL\n   */\n  url: string;\n  /**\n   * TODO: What is this?\n   */\n  ids: string[];\n  /**\n   * TODO: What is this? Where does it come from?\n   */\n  err?: string;\n}\n\nexport async function publishAsync(\n  projectRoot: string,\n  options: PublishOptions = {}\n): Promise<PublishedProjectResult> {\n  options.target = options.target ?? getDefaultTarget(projectRoot);\n  const target = options.target;\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (Env.isDebug()) {\n    console.log();\n    console.log('Publish Assets:');\n    console.log(`- Asset target: ${target}`);\n    console.log();\n  }\n\n  Analytics.logEvent('Publish', {\n    projectRoot,\n    developerTool: Config.developerTool,\n  });\n\n  const validationStatus = await Doctor.validateWithNetworkAsync(projectRoot);\n  if (validationStatus === Doctor.ERROR || validationStatus === Doctor.FATAL) {\n    throw new XDLError(\n      'PUBLISH_VALIDATION_ERROR',\n      \"Couldn't publish because errors were found. (See logs above.) Please fix the errors and try again.\"\n    );\n  }\n\n  // Get project config\n  const { exp, pkg, hooks } = await getPublishExpConfigAsync(projectRoot, options);\n\n  // Exit early if kernel builds are created with robot users\n  if (exp.isKernel && user.kind === 'robot') {\n    throw new XDLError('ROBOT_ACCOUNT_ERROR', 'Kernel builds are not available for robot users');\n  }\n\n  // TODO: refactor this out to a function, throw error if length doesn't match\n  const validPostPublishHooks: LoadedHook[] = prepareHooks(hooks, 'postPublish', projectRoot);\n  const bundles = await createBundlesAsync(projectRoot, options, {\n    useDevServer: Env.shouldUseDevServer(exp),\n  });\n\n  printBundleSizes(bundles);\n\n  await ProjectAssets.publishAssetsAsync({ projectRoot, exp, bundles });\n\n  const androidBundle = bundles.android.code;\n  const iosBundle = bundles.ios.code;\n\n  const hasHooks = validPostPublishHooks.length > 0;\n\n  const shouldPublishAndroidMaps = !!exp.android?.publishSourceMapPath;\n  const shouldPublishIosMaps = !!exp.ios?.publishSourceMapPath;\n  const androidSourceMap = hasHooks || shouldPublishAndroidMaps ? bundles.android.map : null;\n  const iosSourceMap = hasHooks || shouldPublishIosMaps ? bundles.ios.map : null;\n\n  let response;\n  try {\n    response = await _uploadArtifactsAsync({\n      pkg,\n      exp,\n      iosBundle,\n      androidBundle,\n      options,\n    });\n  } catch (e) {\n    if (e.serverError === 'SCHEMA_VALIDATION_ERROR') {\n      throw new Error(\n        `There was an error validating your project schema. Check for any warnings about the contents of your app.json or app.config.js.`\n      );\n    }\n    Sentry.captureException(e);\n    throw e;\n  }\n\n  let androidManifest = {};\n  let iosManifest = {};\n\n  if (\n    validPostPublishHooks.length ||\n    exp.ios?.publishManifestPath ||\n    exp.android?.publishManifestPath ||\n    EmbeddedAssets.shouldEmbedAssetsForExpoUpdates(projectRoot, exp, pkg, target)\n  ) {\n    [androidManifest, iosManifest] = await Promise.all([\n      ExponentTools.getManifestAsync(response.url, {\n        'Exponent-SDK-Version': exp.sdkVersion,\n        'Exponent-Platform': 'android',\n        'Expo-Release-Channel': options.releaseChannel,\n        Accept: 'application/expo+json,application/json',\n      }),\n      ExponentTools.getManifestAsync(response.url, {\n        'Exponent-SDK-Version': exp.sdkVersion,\n        'Exponent-Platform': 'ios',\n        'Expo-Release-Channel': options.releaseChannel,\n        Accept: 'application/expo+json,application/json',\n      }),\n    ]);\n\n    const hookOptions: Omit<HookArguments, 'config'> = {\n      url: response.url,\n      exp,\n      iosBundle,\n      iosSourceMap,\n      iosManifest,\n      androidBundle,\n      androidSourceMap,\n      androidManifest,\n      projectRoot,\n      log: (msg: any) => {\n        logger.global.info({ quiet: true }, msg);\n      },\n    };\n\n    for (const hook of validPostPublishHooks) {\n      logger.global.info(`Running postPublish hook: ${hook.file}`);\n      try {\n        runHook(hook, hookOptions);\n      } catch (e) {\n        logger.global.warn(`Warning: postPublish hook '${hook.file}' failed: ${e.stack}`);\n      }\n    }\n  }\n\n  const fullManifestUrl = response.url.replace('exp://', 'https://');\n  await EmbeddedAssets.configureAsync({\n    projectRoot,\n    pkg,\n    exp,\n    releaseChannel: options.releaseChannel ?? 'default',\n    iosManifestUrl: fullManifestUrl,\n    iosManifest,\n    iosBundle,\n    iosSourceMap,\n    androidManifestUrl: fullManifestUrl,\n    androidManifest,\n    androidBundle,\n    androidSourceMap,\n    target,\n  });\n\n  // TODO: move to postPublish hook\n  // This method throws early when a robot account is used for a kernel build\n  if (exp.isKernel && user.kind !== 'robot') {\n    await _handleKernelPublishedAsync({\n      user,\n      exp,\n      projectRoot,\n      url: response.url,\n    });\n  }\n\n  return {\n    ...response,\n    url:\n      options.releaseChannel && options.releaseChannel !== 'default'\n        ? `${response.url}?release-channel=${options.releaseChannel}`\n        : response.url,\n  };\n}\n\nasync function _uploadArtifactsAsync({\n  exp,\n  iosBundle,\n  androidBundle,\n  options,\n  pkg,\n}: {\n  exp: ExpoConfig;\n  iosBundle: string;\n  androidBundle: string;\n  options: PublishOptions;\n  pkg: PackageJSONConfig;\n}) {\n  logger.global.info('');\n  logger.global.info('Uploading JavaScript bundles');\n  const formData = new FormData();\n\n  formData.append('expJson', JSON.stringify(exp));\n  formData.append('packageJson', JSON.stringify(pkg));\n  formData.append('iosBundle', iosBundle, 'iosBundle');\n  formData.append('androidBundle', androidBundle, 'androidBundle');\n  formData.append('options', JSON.stringify(options));\n\n  const user = await UserManager.ensureLoggedInAsync();\n  const api = ApiV2.clientForUser(user);\n\n  return await api.uploadFormDataAsync('publish/new', formData);\n}\n\nasync function _handleKernelPublishedAsync({\n  projectRoot,\n  user,\n  exp,\n  url,\n}: {\n  projectRoot: string;\n  user: User;\n  exp: ExpoAppManifest;\n  url: string;\n}) {\n  let kernelBundleUrl = `${Config.api.scheme}://${Config.api.host}`;\n  if (Config.api.port) {\n    kernelBundleUrl = `${kernelBundleUrl}:${Config.api.port}`;\n  }\n  kernelBundleUrl = `${kernelBundleUrl}/@${user.username}/${exp.slug}/bundle`;\n\n  if (exp.kernel?.androidManifestPath) {\n    const manifest = await ExponentTools.getManifestAsync(url, {\n      'Exponent-SDK-Version': exp.sdkVersion,\n      'Exponent-Platform': 'android',\n      Accept: 'application/expo+json,application/json',\n    });\n    manifest.bundleUrl = kernelBundleUrl;\n    manifest.sdkVersion = 'UNVERSIONED';\n    await fs.writeFile(\n      path.resolve(projectRoot, exp.kernel.androidManifestPath),\n      JSON.stringify(manifest)\n    );\n  }\n\n  if (exp.kernel?.iosManifestPath) {\n    const manifest = await ExponentTools.getManifestAsync(url, {\n      'Exponent-SDK-Version': exp.sdkVersion,\n      'Exponent-Platform': 'ios',\n      Accept: 'application/expo+json,application/json',\n    });\n    manifest.bundleUrl = kernelBundleUrl;\n    manifest.sdkVersion = 'UNVERSIONED';\n    await fs.writeFile(\n      path.resolve(projectRoot, exp.kernel.iosManifestPath),\n      JSON.stringify(manifest)\n    );\n  }\n}\n"]}