{"version":3,"file":"ProjectUtils.js","sourceRoot":"","sources":["../../src/project/ProjectUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\n\nimport { Analytics, Log, Logger, LogStream } from '../internal';\n\nconst MAX_MESSAGE_LENGTH = 200;\nconst _projectRootToLogger: { [projectRoot: string]: Log } = {};\n\nfunction _getLogger(projectRoot: string): Log {\n  let logger = _projectRootToLogger[projectRoot];\n  if (!logger) {\n    logger = Logger.child({\n      type: 'project',\n      project: path.resolve(projectRoot),\n    });\n    _projectRootToLogger[projectRoot] = logger;\n  }\n\n  return logger;\n}\n\nexport type LogTag = 'expo' | 'metro' | 'device';\nexport type LogFields = {\n  tag: LogTag;\n  issueId?: string;\n  issueCleared?: boolean;\n  includesStack?: boolean;\n  deviceId?: string;\n  deviceName?: string;\n  groupDepth?: number;\n  shouldHide?: boolean;\n  _expoEventType?: 'TUNNEL_READY';\n};\n\nexport function getLogger(projectRoot: string): Log {\n  return _getLogger(projectRoot);\n}\n\nexport function logWithLevel(\n  projectRoot: string,\n  level: string,\n  fields: LogFields,\n  msg: string,\n  id?: string\n) {\n  if (id) {\n    fields.issueId = id;\n  }\n\n  const logger = _getLogger(projectRoot);\n  switch (level) {\n    case 'debug':\n      logger.debug(fields, msg);\n      break;\n    case 'info':\n      logger.info(fields, msg);\n      break;\n    case 'warn':\n      logger.warn(fields, msg);\n      break;\n    case 'error':\n      logger.error(fields, msg);\n      break;\n    default:\n      logger.debug(fields, msg);\n      break;\n  }\n}\n\nexport function logDebug(projectRoot: string, tag: LogTag, message: string, id?: string) {\n  _getLogger(projectRoot).debug({ tag }, message.toString());\n}\n\nexport function logInfo(projectRoot: string, tag: LogTag, message: string, id?: string) {\n  const fields: LogFields = { tag };\n  if (id) {\n    fields.issueId = id;\n  }\n  _getLogger(projectRoot).info(fields, message.toString());\n}\n\nexport function logError(projectRoot: string, tag: LogTag, message: string, id?: string) {\n  const fields: LogFields = { tag };\n  if (id) {\n    fields.issueId = id;\n  }\n  _getLogger(projectRoot).error(fields, message.toString());\n\n  let truncatedMessage = message.toString();\n  if (truncatedMessage.length > MAX_MESSAGE_LENGTH) {\n    truncatedMessage = truncatedMessage.substring(0, MAX_MESSAGE_LENGTH);\n  }\n\n  // temporarily remove sentry until we can trim events\n  // send error to Sentry\n  // Sentry.logError(message.toString(), {\n  //   tags: { tag },\n  // });\n}\n\nexport function logWarning(projectRoot: string, tag: LogTag, message: string, id?: string) {\n  const fields: LogFields = { tag };\n  if (id) {\n    fields.issueId = id;\n  }\n  _getLogger(projectRoot).warn(fields, message.toString());\n\n  let truncatedMessage = message.toString();\n  if (truncatedMessage.length > MAX_MESSAGE_LENGTH) {\n    truncatedMessage = truncatedMessage.substring(0, MAX_MESSAGE_LENGTH);\n  }\n  Analytics.logEvent('Project Warning', {\n    projectRoot,\n    tag,\n    message: truncatedMessage,\n  });\n}\n\nexport function clearNotification(projectRoot: string, id: string) {\n  _getLogger(projectRoot).info(\n    {\n      tag: 'expo',\n      issueCleared: true,\n      issueId: id,\n    },\n    `No issue with ${id}`\n  );\n}\n\nexport function attachLoggerStream(projectRoot: string, stream: LogStream) {\n  _getLogger(projectRoot).addStream(stream);\n}\n"]}