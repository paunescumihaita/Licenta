{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../src/Logger.ts"],"names":[],"mappings":";;;;;AAAA,0DAAkC;AAElC,MAAM,gBAAgB;IACpB,KAAK,CAAC,MAAW;QACf,IAAI,MAAM,CAAC,KAAK,GAAG,gBAAM,CAAC,IAAI,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrB;aAAM,IAAI,MAAM,CAAC,KAAK,GAAG,gBAAM,CAAC,IAAI,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;aAAM,IAAI,MAAM,CAAC,KAAK,GAAG,gBAAM,CAAC,KAAK,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACvB;IACH,CAAC;CACF;AAED,MAAM,MAAM,GAAG,gBAAM,CAAC,YAAY,CAAC;IACjC,IAAI,EAAE,MAAM;IACZ,WAAW,EAAE,gBAAM,CAAC,cAAc;IAClC,OAAO,EACL,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;QAC/D,CAAC,CAAC;YACE;gBACE,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,IAAI,gBAAgB,EAAE;gBAC9B,WAAW,EAAE,KAAK;gBAClB,KAAK,EAAE,OAAO;aACf;SACF;QACH,CAAC,CAAC,EAAE;CACT,CAAC,CAAC;AAKH,kBAAe;IACb,KAAK,EAAE,CAAC,OAAe,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;IACjD,aAAa,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;IACtD,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;IACxC,KAAK,EAAE,gBAAM,CAAC,KAAK;IACnB,IAAI,EAAE,gBAAM,CAAC,IAAI;IACjB,IAAI,EAAE,gBAAM,CAAC,IAAI;IACjB,KAAK,EAAE,gBAAM,CAAC,KAAK;CACpB,CAAC","sourcesContent":["import bunyan from '@expo/bunyan';\n\nclass ConsoleRawStream {\n  write(record: any) {\n    if (record.level < bunyan.INFO) {\n      console.log(record);\n    } else if (record.level < bunyan.WARN) {\n      console.info(record);\n    } else if (record.level < bunyan.ERROR) {\n      console.warn(record);\n    } else {\n      console.error(record);\n    }\n  }\n}\n\nconst logger = bunyan.createLogger({\n  name: 'expo',\n  serializers: bunyan.stdSerializers,\n  streams:\n    process.env.EXPO_RAW_LOG && process.env.NODE_ENV !== 'production'\n      ? [\n          {\n            type: 'raw',\n            stream: new ConsoleRawStream(),\n            closeOnExit: false,\n            level: 'debug',\n          },\n        ]\n      : [],\n});\n\nexport type LogStream = bunyan.Stream;\nexport type Log = bunyan;\n\nexport default {\n  child: (options: object) => logger.child(options),\n  notifications: logger.child({ type: 'notifications' }),\n  global: logger.child({ type: 'global' }),\n  DEBUG: bunyan.DEBUG,\n  INFO: bunyan.INFO,\n  WARN: bunyan.WARN,\n  ERROR: bunyan.ERROR,\n};\n"]}