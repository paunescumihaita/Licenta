{"version":3,"file":"StandaloneBuildFlags.js","sourceRoot":"","sources":["../../src/detach/StandaloneBuildFlags.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAiBH,MAAM,oBAAoB;IAA1B;QACE,kBAAa,GAAiC,OAAO,CAAC;QACtD,sBAAiB,GAAkB,GAAG,EAAE,CAAC,KAAK,CAAC;IA6BjD,CAAC;;AAzBQ,gCAAW,GAAG,GAAG,EAAE;IACxB,OAAO,IAAI,oBAAoB,EAAE,CAAC;AACpC,CAAC,CAAC;AAEK,8BAAS,GAAG,CACjB,aAA2C,EAC3C,GAA6B,EACP,EAAE;IACxB,MAAM,KAAK,GAAG,IAAI,oBAAoB,EAAE,CAAC;IACzC,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;IACpC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,KAAK,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS,MAAK,QAAQ,CAAC;IAC5D,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEK,kCAAa,GAAG,CACrB,aAA2C,EAC3C,OAAqC,EACf,EAAE;IACxB,MAAM,KAAK,GAAG,IAAI,oBAAoB,EAAE,CAAC;IACzC,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;IACpC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,KAAK,CAAC,iBAAiB,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC;IACtC,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAGJ,kBAAe,oBAAoB,CAAC","sourcesContent":["/*\n *  StandaloneBuildFlags is owned by a StandaloneContext and carries information about\n *  how to compile native code during the build step.\n */\n\ntype StandaloneBuildConfiguration = 'Debug' | 'Release';\ntype StandaloneBuildAndroidFlags = {\n  keystore: string;\n  keystorePassword: string;\n  keyAlias: string;\n  keyPassword: string;\n  outputFile: string | null;\n};\ntype StandaloneBuildIosFlags = {\n  workspaceSourcePath: string;\n  appleTeamId?: string | null;\n  buildType?: string;\n  bundleExecutable?: string;\n};\n\nclass StandaloneBuildFlags {\n  configuration: StandaloneBuildConfiguration = 'Debug';\n  isExpoClientBuild: () => boolean = () => false;\n  android?: StandaloneBuildAndroidFlags;\n  ios?: StandaloneBuildIosFlags;\n\n  static createEmpty = () => {\n    return new StandaloneBuildFlags();\n  };\n\n  static createIos = (\n    configuration: StandaloneBuildConfiguration,\n    ios?: StandaloneBuildIosFlags\n  ): StandaloneBuildFlags => {\n    const flags = new StandaloneBuildFlags();\n    flags.configuration = configuration;\n    flags.ios = ios;\n    flags.isExpoClientBuild = () => ios?.buildType === 'client';\n    return flags;\n  };\n\n  static createAndroid = (\n    configuration: StandaloneBuildConfiguration,\n    android?: StandaloneBuildAndroidFlags\n  ): StandaloneBuildFlags => {\n    const flags = new StandaloneBuildFlags();\n    flags.configuration = configuration;\n    flags.android = android;\n    flags.isExpoClientBuild = () => false;\n    return flags;\n  };\n}\n\nexport default StandaloneBuildFlags;\n"]}