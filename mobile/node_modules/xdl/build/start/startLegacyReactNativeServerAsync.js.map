{"version":3,"file":"startLegacyReactNativeServerAsync.js","sourceRoot":"","sources":["../../src/start/startLegacyReactNativeServerAsync.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport { getBareExtensions, getManagedExtensions } from '@expo/config/paths';\nimport axios from 'axios';\nimport child_process from 'child_process';\nimport escapeRegExp from 'lodash/escapeRegExp';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport split from 'split';\nimport treekill from 'tree-kill';\nimport { promisify } from 'util';\n\nimport {\n  assertValidProjectRoot,\n  delayAsync,\n  getFreePortAsync,\n  ProjectSettings,\n  ProjectUtils,\n  StartDevServerOptions,\n  UrlUtils,\n  Versions,\n  Watchman,\n} from '../internal';\n\nconst treekillAsync = promisify<number, string>(treekill);\n\n// The --verbose flag is intended for react-native-cli/metro, not expo-cli\nconst METRO_VERBOSE_WARNING = 'Run CLI with --verbose flag for more details.';\n\n// Remove these constants and related code when SDK35 isn't supported anymore\n// Context: https://github.com/expo/expo-cli/issues/1074\nconst NODE_12_WINDOWS_METRO_ERROR = `Invalid regular expression: /(.*\\\\__fixtures__\\\\.*|node_modules[\\\\]react[\\\\]dist[\\\\].*|website\\\\node_modules\\\\.*|heapCapture\\\\bundle.js|.*\\\\__tests__\\\\.*)$/: Unterminated character class`;\nconst NODE_12_WINDOWS_METRO_SUGGESTION = `\\nUnable to start the project due to a documented incompatibility between Node 12 LTS and Expo SDK 35 on Windows.\nPlease refer to this GitHub comment for a solution:\nhttps://github.com/expo/expo-cli/issues/1074#issuecomment-559220752\\n`;\n\nfunction _logPackagerOutput(projectRoot: string, level: string, data: object) {\n  let output = data.toString();\n  if (!output) {\n    return;\n  }\n  // Temporarily hide warnings about duplicate providesModule declarations\n  // under react-native\n  if (_isIgnorableDuplicateModuleWarning(projectRoot, level, output)) {\n    ProjectUtils.logDebug(\n      projectRoot,\n      'expo',\n      `Suppressing @providesModule warning: ${output}`,\n      'project-suppress-providesmodule-warning'\n    );\n    return;\n  }\n  if (_isIgnorableMetroConsoleOutput(output) || _isIgnorableRnpmWarning(output)) {\n    ProjectUtils.logDebug(projectRoot, 'expo', output);\n    return;\n  }\n\n  if (output.includes(NODE_12_WINDOWS_METRO_ERROR)) {\n    ProjectUtils.logError(projectRoot, 'expo', NODE_12_WINDOWS_METRO_SUGGESTION);\n    return;\n  }\n\n  if (output.includes(METRO_VERBOSE_WARNING)) {\n    output = output.replace(METRO_VERBOSE_WARNING, '');\n  }\n\n  if (/^Scanning folders for symlinks in /.test(output)) {\n    ProjectUtils.logDebug(projectRoot, 'metro', output);\n    return;\n  }\n  if (level === 'info') {\n    ProjectUtils.logInfo(projectRoot, 'metro', output);\n  } else {\n    ProjectUtils.logError(projectRoot, 'metro', output);\n  }\n}\n\nfunction _isIgnorableMetroConsoleOutput(output: string) {\n  // As of react-native 0.61.x, Metro prints console logs from the device to console, without\n  // passing them through the custom log reporter.\n  //\n  // Managed apps have a separate remote logging implementation included in the Expo SDK,\n  // (see: _handleDeviceLogs), so we can just ignore these device logs from Metro.\n  // if (/^ () /)\n  //\n  // These logs originate from:\n  // https://github.com/facebook/metro/blob/e8181fb9db7db31adf7d1ed9ab840f54449ef238/packages/metro/src/lib/logToConsole.js#L50\n  return /^\\s+(INFO|WARN|LOG|GROUP|DEBUG) /.test(output);\n}\n\nfunction _isIgnorableRnpmWarning(output: string) {\n  return output.startsWith(\n    'warn The following packages use deprecated \"rnpm\" config that will stop working from next release'\n  );\n}\n\nfunction _isIgnorableDuplicateModuleWarning(\n  projectRoot: string,\n  level: string,\n  output: string\n): boolean {\n  if (\n    level !== 'error' ||\n    !output.startsWith('jest-haste-map: @providesModule naming collision:')\n  ) {\n    return false;\n  }\n\n  const reactNativeNodeModulesPath = path.join(\n    projectRoot,\n    'node_modules',\n    'react-native',\n    'node_modules'\n  );\n  const reactNativeNodeModulesPattern = escapeRegExp(reactNativeNodeModulesPath);\n  const reactNativeNodeModulesCollisionRegex = new RegExp(\n    `Paths: ${reactNativeNodeModulesPattern}.+ collides with ${reactNativeNodeModulesPattern}.+`\n  );\n  return reactNativeNodeModulesCollisionRegex.test(output);\n}\n\nexport async function startReactNativeServerAsync({\n  projectRoot,\n  options = {},\n  exp = getConfig(projectRoot).exp,\n  verbose = true,\n}: {\n  projectRoot: string;\n  options: StartDevServerOptions;\n  exp?: ExpoConfig;\n  verbose?: boolean;\n}): Promise<void> {\n  assertValidProjectRoot(projectRoot);\n  await stopReactNativeServerAsync(projectRoot);\n  await Watchman.addToPathAsync(); // Attempt to fix watchman if it's hanging\n  await Watchman.unblockAndGetVersionAsync(projectRoot);\n\n  let packagerPort = await getFreePortAsync(19001); // Create packager options\n\n  const customLogReporterPath: string = require.resolve(\n    path.join(__dirname, '../../build/reporter')\n  );\n\n  // TODO: Bacon: Support .mjs (short-lived JS modules extension that some packages use)\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: false };\n  const sourceExts =\n    options.target === 'bare'\n      ? getBareExtensions([], sourceExtsConfig)\n      : getManagedExtensions([], sourceExtsConfig);\n\n  let packagerOpts: { [key: string]: any } = {\n    port: packagerPort,\n    customLogReporterPath,\n    sourceExts,\n  };\n\n  if (options.nonPersistent && Versions.lteSdkVersion(exp, '32.0.0')) {\n    packagerOpts.nonPersistent = true;\n  }\n\n  if (Versions.gteSdkVersion(exp, '33.0.0')) {\n    // starting with SDK 37, we bundle this plugin with the expo-asset package instead of expo,\n    // so check there first and fall back to expo if we can't find it in expo-asset\n    packagerOpts.assetPlugins = resolveFrom.silent(projectRoot, 'expo-asset/tools/hashAssetFiles');\n    if (!packagerOpts.assetPlugins) {\n      packagerOpts.assetPlugins = resolveFrom.silent(projectRoot, 'expo/tools/hashAssetFiles');\n      if (!packagerOpts.assetPlugins) {\n        throw new Error(\n          'Unable to find the expo-asset package in the current project. Install it and try again.'\n        );\n      }\n    }\n  }\n\n  if (options.maxWorkers) {\n    packagerOpts['max-workers'] = options.maxWorkers;\n  }\n\n  if (!Versions.gteSdkVersion(exp, '16.0.0')) {\n    delete packagerOpts.customLogReporterPath;\n  }\n  const userPackagerOpts = exp.packagerOpts;\n\n  if (userPackagerOpts) {\n    // The RN CLI expects rn-cli.config.js's path to be absolute. We use the\n    // project root to resolve relative paths since that was the original\n    // behavior of the RN CLI.\n    if (userPackagerOpts.config) {\n      userPackagerOpts.config = path.resolve(projectRoot, userPackagerOpts.config);\n    }\n\n    // Provide a fallback if the value isn't given\n    const userSourceExts = userPackagerOpts.sourceExts ?? [];\n\n    packagerOpts = {\n      ...packagerOpts,\n      ...userPackagerOpts,\n      // In order to prevent people from forgetting to include the .expo extension or other things\n      // NOTE(brentvatne): we should probably do away with packagerOpts soon in favor of @expo/metro-config!\n      sourceExts: [...new Set([...packagerOpts.sourceExts, ...userSourceExts])],\n    };\n\n    if (userPackagerOpts.port !== undefined && userPackagerOpts.port !== null) {\n      packagerPort = userPackagerOpts.port;\n    }\n  }\n  const cliOpts = ['start'];\n  for (const [key, val] of Object.entries(packagerOpts)) {\n    // If the packager opt value is boolean, don't set\n    // --[opt] [value], just set '--opt'\n    if (val && typeof val === 'boolean') {\n      cliOpts.push(`--${key}`);\n    } else if (val) {\n      cliOpts.push(`--${key}`, val);\n    }\n  }\n\n  if (process.env.EXPO_DEBUG) {\n    cliOpts.push('--verbose');\n  }\n\n  if (options.reset) {\n    cliOpts.push('--reset-cache');\n  }\n\n  // Get the CLI path\n  const cliPath = resolveFrom(projectRoot, 'react-native/local-cli/cli.js');\n\n  // Run the copy of Node that's embedded in Electron by setting the\n  // ELECTRON_RUN_AS_NODE environment variable\n  // Note: the CLI script sets up graceful-fs and sets ulimit to 4096 in the\n  // child process\n  const packagerProcess = child_process.fork(cliPath, cliOpts, {\n    cwd: projectRoot,\n    env: {\n      ...process.env,\n      NODE_OPTIONS: process.env.METRO_NODE_OPTIONS,\n      REACT_NATIVE_APP_ROOT: projectRoot,\n      ELECTRON_RUN_AS_NODE: '1',\n    },\n    silent: true,\n  });\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    packagerPort,\n    packagerPid: packagerProcess.pid,\n  }); // TODO: do we need this? don't know if it's ever called\n  process.on('exit', () => {\n    treekill(packagerProcess.pid);\n  });\n  if (!packagerProcess.stdout) {\n    throw new Error('Expected spawned process to have a stdout stream, but none was found.');\n  }\n  if (!packagerProcess.stderr) {\n    throw new Error('Expected spawned process to have a stderr stream, but none was found.');\n  }\n  packagerProcess.stdout.setEncoding('utf8');\n  packagerProcess.stderr.setEncoding('utf8');\n  packagerProcess.stdout.pipe(split()).on('data', data => {\n    if (verbose) {\n      _logPackagerOutput(projectRoot, 'info', data);\n    }\n  });\n  packagerProcess.stderr.on('data', data => {\n    if (verbose) {\n      _logPackagerOutput(projectRoot, 'error', data);\n    }\n  });\n  const exitPromise = new Promise<void>((resolve, reject) => {\n    packagerProcess.once('exit', async code => {\n      ProjectUtils.logDebug(projectRoot, 'expo', `Metro Bundler process exited with code ${code}`);\n      if (code) {\n        reject(new Error(`Metro Bundler process exited with code ${code}`));\n      } else {\n        resolve();\n      }\n      try {\n        await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n          packagerPort: null,\n          packagerPid: null,\n        });\n      } catch (e) {}\n    });\n  });\n  const packagerUrl = await UrlUtils.constructBundleUrlAsync(projectRoot, {\n    urlType: 'http',\n    hostType: 'localhost',\n  });\n  await Promise.race([_waitForRunningAsync(projectRoot, `${packagerUrl}/status`), exitPromise]);\n}\n\nexport async function stopReactNativeServerAsync(projectRoot: string): Promise<void> {\n  assertValidProjectRoot(projectRoot);\n  const packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n  if (!packagerInfo.packagerPort || !packagerInfo.packagerPid) {\n    ProjectUtils.logDebug(projectRoot, 'expo', `No packager found for project at ${projectRoot}.`);\n    return;\n  }\n  ProjectUtils.logDebug(\n    projectRoot,\n    'expo',\n    `Killing packager process tree: ${packagerInfo.packagerPid}`\n  );\n  try {\n    await treekillAsync(packagerInfo.packagerPid, 'SIGKILL');\n  } catch (e) {\n    ProjectUtils.logDebug(projectRoot, 'expo', `Error stopping packager process: ${e.toString()}`);\n  }\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    packagerPort: null,\n    packagerPid: null,\n  });\n}\n\nasync function _waitForRunningAsync(\n  projectRoot: string,\n  url: string,\n  retries: number = 300\n): Promise<true> {\n  try {\n    const response = await axios.request({\n      url,\n      responseType: 'text',\n      proxy: false,\n    });\n    if (/packager-status:running/.test(response.data)) {\n      return true;\n    } else if (retries === 0) {\n      ProjectUtils.logError(\n        projectRoot,\n        'expo',\n        `Could not get status from Metro bundler. Server response: ${response.data}`\n      );\n    }\n  } catch (e) {\n    if (retries === 0) {\n      ProjectUtils.logError(\n        projectRoot,\n        'expo',\n        `Could not get status from Metro bundler. ${e.message}`\n      );\n    }\n  }\n\n  if (retries <= 0) {\n    throw new Error('Connecting to Metro bundler failed.');\n  } else {\n    await delayAsync(100);\n    return _waitForRunningAsync(projectRoot, url, retries - 1);\n  }\n}\n"]}