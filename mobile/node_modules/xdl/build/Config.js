"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const getenv_1 = __importDefault(require("getenv"));
const internal_1 = require("./internal");
const apiConfig = {
    local: {
        scheme: 'http',
        host: 'localhost',
        port: 3000,
    },
    staging: {
        scheme: getenv_1.default.string('XDL_SCHEME', 'https'),
        host: 'staging.exp.host',
        port: getenv_1.default.int('XDL_PORT', 0) || null,
    },
    production: {
        scheme: getenv_1.default.string('XDL_SCHEME', 'https'),
        host: getenv_1.default.string('XDL_HOST', 'exp.host'),
        port: getenv_1.default.int('XDL_PORT', 0) || null,
    },
};
const turtleApiConfig = {
    local: {
        scheme: 'http',
        host: 'localhost',
        port: 3006,
    },
    staging: {
        scheme: 'https',
        host: 'staging.turtle.expo.io',
        port: 443,
    },
    production: {
        scheme: 'https',
        host: 'turtle.expo.io',
        port: 443,
    },
};
let api = apiConfig.production;
let turtleApi = turtleApiConfig.production;
if (internal_1.Env.isLocal()) {
    api = apiConfig.local;
    turtleApi = turtleApiConfig.local;
}
else if (internal_1.Env.isStaging()) {
    api = apiConfig.staging;
    turtleApi = turtleApiConfig.staging;
}
const config = {
    api,
    turtleApi,
    ngrok: {
        authToken: '5W1bR67GNbWcXqmxZzBG1_56GezNeaX6sSRvn8npeQ8',
        authTokenPublicId: '5W1bR67GNbWcXqmxZzBG1',
        domain: 'exp.direct',
    },
    developerTool: null,
    validation: {
        reactNativeVersionWarnings: true,
    },
    helpUrl: 'https://docs.expo.io/',
    offline: false,
};
exports.default = config;
//# sourceMappingURL=Config.js.map