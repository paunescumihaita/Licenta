{"version":3,"file":"WebpackCompiler.js","sourceRoot":"","sources":["../../src/webpack-utils/WebpackCompiler.ts"],"names":[],"mappings":";;;;;AAAA;;;;;GAKG;AACH,kDAA0B;AAC1B,kDAA0B;AAE1B,kGAA0E;AAG1E,0CAA+D;AAE/D,MAAM,WAAW,GAAG,MAAM,CAAC;AAE3B,MAAM,oBAAoB,GAAG,6BAAkB,CAAC,sBAAsB,EAAE,CAAC;AAEzE,SAAS,GAAG,CAAC,WAAmB,EAAE,OAAe,EAAE,cAAc,GAAG,IAAI;IACtE,IAAI,cAAc,EAAE;QAClB,uBAAY,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;KACzD;SAAM;QACL,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KACtB;AACH,CAAC;AAED,SAAS,SAAS;IAChB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC;AACjG,CAAC;AAED,SAAS,UAAU,CAAC,WAAmB,EAAE,OAAe;IACtD,uBAAY,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,QAAQ,CAAC,WAAmB,EAAE,OAAe;IACpD,uBAAY,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AAC3D,CAAC;AAED,SAAgB,iBAAiB,CAC/B,WAAmB,EACnB,EACE,OAAO,EACP,IAAI,EACJ,eAAe,EACf,cAAc,GAMf;IAED,kBAAkB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;IAEhD,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,OAAO,IAAI,oBAAoB,eAAK,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;IAEtE,MAAM,OAAO,GAAG,eAAK,CAAC,GAAG,CAAA,GAAG,CAAC;IAE7B,IAAI,IAAI,CAAC,iBAAiB,EAAE;QAC1B,OAAO,IAAI,aAAa,eAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,OAAO,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACxF,OAAO,IAAI,aAAa,eAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,OAAO,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;KACvF;SAAM;QACL,OAAO,IAAI,aAAa,IAAI,CAAC,mBAAmB,EAAE,CAAC;KACpD;IAED,OAAO,IAAI,IAAI,CAAC;IAEhB,OAAO,IAAI,iBAAiB,eAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,uCAAuC,CAAC;IAEhG,OAAO,IAAI,IAAI,CAAC;IAEhB,OAAO,IAAI,mBAAmB,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,OAAO,sBAAsB,CAAC;IAC/E,IAAI,eAAe,EAAE;QACnB,OAAO,IAAI,mBAAmB,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,OAAO,oBAAoB,CAAC;KAC9E;IAED,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;AAC5C,CAAC;AAxCD,8CAwCC;AAED,SAAgB,kBAAkB,CAAC,WAAmB,EAAE,cAAuB;IAC7E,GAAG,CACD,WAAW,EACX,eAAK,CACH,eAAK,CAAC,OAAO,CAAC,GAAG,CACf,0FAA0F;QACxF,uFAAuF,CAC1F,EACD,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAC/F,EACD,cAAc,CACf,CAAC;AACJ,CAAC;AAZD,gDAYC;AAED,SAAgB,qBAAqB,CAAC,EACpC,WAAW,EACX,OAAO,EACP,MAAM,EACN,IAAI,EACJ,cAAc,EACd,cAAc,EACd,UAAU,GASX;IACC,kDAAkD;IAClD,wEAAwE;IACxE,MAAM,QAAQ,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;IAExC,qEAAqE;IACrE,yEAAyE;IACzE,wEAAwE;IACxE,4EAA4E;IAC5E,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE;QACzC,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,IAAI,cAAc,GAAG,IAAI,CAAC;IAE1B,uEAAuE;IACvE,uEAAuE;IACvE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAC,KAAK,EAAC,EAAE;QAC5C,IAAI,oBAAoB,IAAI,CAAC,cAAc,EAAE;YAC3C,SAAS,EAAE,CAAC;SACb;QAED,sEAAsE;QACtE,2EAA2E;QAC3E,kCAAkC;QAClC,uDAAuD;QACvD,kFAAkF;QAClF,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;YAC7B,GAAG,EAAE,KAAK;YACV,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,+BAAqB,CAAC,SAAS,CAAC,CAAC;QAElD,MAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAE1E,IAAI,YAAY,EAAE;YAChB,6BAAkB,CAAC,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;SACzE;QAED,IAAI,YAAY,IAAI,CAAC,cAAc,IAAI,CAAC,cAAc,EAAE;YACtD,iBAAiB,CAAC,WAAW,EAAE;gBAC7B,OAAO;gBACP,IAAI;gBACJ,eAAe,EAAE,IAAI;gBACrB,cAAc,EAAE,cAAc;aAC/B,CAAC,CAAC;SACJ;QAED,UAAU,EAAE,CAAC;QACb,cAAc,GAAG,KAAK,CAAC;QAEvB,qCAAqC;QACrC,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;YAC1B,yDAAyD;YACzD,0DAA0D;YAC1D,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9B,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;aAC5B;YACD,QAAQ,CAAC,WAAW,EAAE,eAAK,CAAC,GAAG,CAAC,sBAAsB,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACxF,OAAO;SACR;QAED,yCAAyC;QACzC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE;YAC5B,UAAU,CACR,WAAW,EACX,eAAK,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAC3E,CAAC;SACH;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC;AAClB,CAAC;AA1FD,sDA0FC;AAED,SAAgB,oBAAoB,CAAC,EACnC,WAAW,EACX,OAAO,EACP,IAAI,EACJ,MAAM,EACN,cAAc,EACd,cAAc,GAQf;IACC,GAAG,CAAC,WAAW,EAAE,eAAK,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAC5D,kBAAkB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;IAChD,6BAAkB,CAAC,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;IAExE,IAAI,CAAC,cAAc,IAAI,cAAc,EAAE;QACrC,iBAAiB,CAAC,WAAW,EAAE;YAC7B,OAAO;YACP,IAAI;YACJ,cAAc,EAAE,cAAc;SAC/B,CAAC,CAAC;KACJ;AACH,CAAC;AA1BD,oDA0BC","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport boxen from 'boxen';\nimport chalk from 'chalk';\nimport { Urls } from 'react-dev-utils/WebpackDevServerUtils';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport webpack from 'webpack';\n\nimport { ProjectUtils, WebpackEnvironment } from '../internal';\n\nconst CONSOLE_TAG = 'expo';\n\nconst SHOULD_CLEAR_CONSOLE = WebpackEnvironment.shouldWebpackClearLogs();\n\nfunction log(projectRoot: string, message: string, showInDevtools = true) {\n  if (showInDevtools) {\n    ProjectUtils.logInfo(projectRoot, CONSOLE_TAG, message);\n  } else {\n    console.log(message);\n  }\n}\n\nfunction clearLogs() {\n  process.stdout.write(process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H');\n}\n\nfunction logWarning(projectRoot: string, message: string) {\n  ProjectUtils.logWarning(projectRoot, CONSOLE_TAG, message);\n}\n\nfunction logError(projectRoot: string, message: string) {\n  ProjectUtils.logError(projectRoot, CONSOLE_TAG, message);\n}\n\nexport function printInstructions(\n  projectRoot: string,\n  {\n    appName,\n    urls,\n    shouldPrintHelp,\n    showInDevtools,\n  }: {\n    appName: string;\n    urls: Urls;\n    shouldPrintHelp?: boolean;\n    showInDevtools: boolean;\n  }\n) {\n  printPreviewNotice(projectRoot, showInDevtools);\n\n  let message = '\\n';\n  message += `You can now view ${chalk.bold(appName)} in the browser\\n`;\n\n  const divider = chalk.dim`â”‚`;\n\n  if (urls.lanUrlForTerminal) {\n    message += `\\n \\u203A ${chalk.reset('Local')}   ${divider} ${urls.localUrlForTerminal}`;\n    message += `\\n \\u203A ${chalk.reset('LAN')}     ${divider} ${urls.lanUrlForTerminal}`;\n  } else {\n    message += `\\n \\u203A ${urls.localUrlForTerminal}`;\n  }\n\n  message += '\\n';\n\n  message += `\\n \\u203A Run ${chalk.bold(`expo build:web`)} to optimize and build for production`;\n\n  message += '\\n';\n\n  message += `\\n \\u203A Press ${chalk.bold(`w`)} ${divider} open in the browser`;\n  if (shouldPrintHelp) {\n    message += `\\n \\u203A Press ${chalk.bold(`?`)} ${divider} show all commands`;\n  }\n\n  log(projectRoot, message, showInDevtools);\n}\n\nexport function printPreviewNotice(projectRoot: string, showInDevtools: boolean) {\n  log(\n    projectRoot,\n    boxen(\n      chalk.magenta.dim(\n        'Expo web is in late beta, please report any bugs or missing features on the Expo repo.\\n' +\n          'You can follow the V1 release for more info: https://github.com/expo/expo/issues/6782'\n      ),\n      { dimBorder: true, borderColor: 'magenta', padding: { top: 0, left: 1, bottom: 0, right: 1 } }\n    ),\n    showInDevtools\n  );\n}\n\nexport function createWebpackCompiler({\n  projectRoot,\n  appName,\n  config,\n  urls,\n  nonInteractive,\n  webpackFactory,\n  onFinished,\n}: {\n  projectRoot: string;\n  appName: string;\n  config: webpack.Configuration;\n  urls: Urls;\n  nonInteractive?: boolean;\n  webpackFactory: (options?: webpack.Configuration) => webpack.Compiler;\n  onFinished: () => void;\n}) {\n  // \"Compiler\" is a low-level interface to Webpack.\n  // It lets us listen to some events and provide our own custom messages.\n  const compiler = webpackFactory(config);\n\n  // \"invalid\" event fires when you have changed a file, and Webpack is\n  // recompiling a bundle. WebpackDevServer takes care to pause serving the\n  // bundle, so if you refresh, it'll wait instead of serving the old one.\n  // \"invalid\" is short for \"bundle invalidated\", it doesn't imply any errors.\n  compiler.hooks.invalid.tap('invalid', () => {\n    log(projectRoot, '\\nCompiling...');\n  });\n\n  let isFirstCompile = true;\n\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tap('done', async stats => {\n    if (SHOULD_CLEAR_CONSOLE && !nonInteractive) {\n      clearLogs();\n    }\n\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    // We only construct the warnings and errors for speed:\n    // https://github.com/facebook/create-react-app/issues/4492#issuecomment-421959548\n    const statsData = stats.toJson({\n      all: false,\n      warnings: true,\n      errors: true,\n    });\n\n    const messages = formatWebpackMessages(statsData);\n\n    const isSuccessful = !messages.errors.length && !messages.warnings.length;\n\n    if (isSuccessful) {\n      WebpackEnvironment.logEnvironmentInfo(projectRoot, CONSOLE_TAG, config);\n    }\n\n    if (isSuccessful && !isFirstCompile && !nonInteractive) {\n      printInstructions(projectRoot, {\n        appName,\n        urls,\n        shouldPrintHelp: true,\n        showInDevtools: isFirstCompile,\n      });\n    }\n\n    onFinished();\n    isFirstCompile = false;\n\n    // If errors exist, only show errors.\n    if (messages.errors.length) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (messages.errors.length > 1) {\n        messages.errors.length = 1;\n      }\n      logError(projectRoot, chalk.red('Failed to compile.\\n') + messages.errors.join('\\n\\n'));\n      return;\n    }\n\n    // Show warnings if no errors were found.\n    if (messages.warnings.length) {\n      logWarning(\n        projectRoot,\n        chalk.yellow('Compiled with warnings.\\n') + messages.warnings.join('\\n\\n')\n      );\n    }\n  });\n\n  return compiler;\n}\n\nexport function printSuccessMessages({\n  projectRoot,\n  appName,\n  urls,\n  config,\n  isFirstCompile,\n  nonInteractive,\n}: {\n  projectRoot: string;\n  appName: string;\n  config: webpack.Configuration;\n  urls: Urls;\n  isFirstCompile: boolean;\n  nonInteractive?: boolean;\n}) {\n  log(projectRoot, chalk.bold.cyan(`Compiled successfully!`));\n  printPreviewNotice(projectRoot, isFirstCompile);\n  WebpackEnvironment.logEnvironmentInfo(projectRoot, CONSOLE_TAG, config);\n\n  if (!nonInteractive || isFirstCompile) {\n    printInstructions(projectRoot, {\n      appName,\n      urls,\n      showInDevtools: isFirstCompile,\n    });\n  }\n}\n"]}