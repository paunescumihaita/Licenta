{"version":3,"file":"Extract.js","sourceRoot":"","sources":["../src/Extract.ts"],"names":[],"mappings":";;;;;AAAA,oEAA2C;AAC3C,8CAAsB;AAEf,KAAK,UAAU,YAAY,CAAC,OAAe,EAAE,GAAW;IAC7D,IAAI;QACF,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;YAChC,MAAM,qBAAU,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;gBACnD,KAAK,EAAE,SAAS;gBAChB,GAAG,EAAE,SAAS;aACf,CAAC,CAAC;YACH,OAAO;SACR;KACF;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;KAC1B;IACD,2EAA2E;IAC3E,yCAAyC;IACzC,MAAM,aAAG,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACjD,CAAC;AAfD,oCAeC","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport tar from 'tar';\n\nexport async function extractAsync(archive: string, dir: string): Promise<void> {\n  try {\n    if (process.platform !== 'win32') {\n      await spawnAsync('tar', ['-xf', archive, '-C', dir], {\n        stdio: 'inherit',\n        cwd: __dirname,\n      });\n      return;\n    }\n  } catch (e) {\n    console.error(e.message);\n  }\n  // tar node module has previously had problems with big files, and seems to\n  // be slower, so only use it as a backup.\n  await tar.extract({ file: archive, cwd: dir });\n}\n"]}