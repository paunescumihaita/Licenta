{"version":3,"file":"Webpack.js","sourceRoot":"","sources":["../src/Webpack.ts"],"names":[],"mappings":"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","sourcesContent":["import { getConfig, getNameFromConfig } from '@expo/config';\nimport * as devcert from '@expo/devcert';\nimport { isUsingYarn } from '@expo/package-manager';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport http from 'http';\nimport * as path from 'path';\nimport { prepareUrls, Urls } from 'react-dev-utils/WebpackDevServerUtils';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport {\n  choosePortAsync,\n  ip,\n  learnMore,\n  Logger,\n  ProjectSettings,\n  ProjectUtils,\n  UrlUtils,\n  Versions,\n  WebpackCompiler,\n  WebpackEnvironment,\n  XDLError,\n} from './internal';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\ntype DevServer = WebpackDevServer | http.Server;\n\nlet webpackDevServerInstance: DevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: DevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  webpackEnv?: object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n  offline?: boolean;\n};\n\nexport async function restartAsync(\n  projectRoot: string,\n  options: BundlingOptions = {}\n): Promise<WebpackSettings | null> {\n  await stopAsync(projectRoot);\n  return await startAsync(projectRoot, options);\n}\n\nlet devServerInfo: {\n  urls: Urls;\n  protocol: 'http' | 'https';\n  useYarn: boolean;\n  appName: string;\n  nonInteractive: boolean;\n  port: number;\n} | null = null;\n\nexport function printConnectionInstructions(projectRoot: string, options = {}) {\n  if (!devServerInfo) return;\n  WebpackCompiler.printInstructions(projectRoot, {\n    appName: devServerInfo.appName,\n    urls: devServerInfo.urls,\n    showInDevtools: false,\n    ...options,\n  });\n}\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    chalk.dim(`Clearing ${mode} cache directory...`)\n  );\n  try {\n    await fs.remove(cacheFolder);\n  } catch {}\n}\n\nexport async function broadcastMessage(message: 'content-changed' | string, data?: any) {\n  if (webpackDevServerInstance && webpackDevServerInstance instanceof WebpackDevServer) {\n    webpackDevServerInstance.sockWrite(webpackDevServerInstance.sockets, message, data);\n  }\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {},\n  deprecatedVerbose?: boolean\n): Promise<WebpackSettings | null> {\n  if (typeof deprecatedVerbose !== 'undefined') {\n    throw new XDLError(\n      'WEBPACK_DEPRECATED',\n      'startAsync(root, options, verbose): The `verbose` option is deprecated.'\n    );\n  }\n\n  const serverName = 'Webpack';\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(\n      projectRoot,\n      WEBPACK_LOG_TAG,\n      chalk.red(`${serverName} is already running.`)\n    );\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n  const port = await getAvailablePortAsync({\n    projectRoot,\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting ${serverName} on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n  const urls = prepareUrls(protocol, '::', webpackServerPort);\n  const useYarn = isUsingYarn(projectRoot);\n  const appName = await getProjectNameAsync(projectRoot);\n  const nonInteractive = validateBoolOption(\n    'nonInteractive',\n    options.nonInteractive,\n    !process.stdout.isTTY\n  );\n\n  devServerInfo = {\n    urls,\n    protocol,\n    useYarn,\n    appName,\n    nonInteractive,\n    port: webpackServerPort!,\n  };\n\n  const server: DevServer = await new Promise(resolve => {\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = WebpackCompiler.createWebpackCompiler({\n      projectRoot,\n      appName,\n      config,\n      urls,\n      nonInteractive,\n      webpackFactory: webpack,\n      onFinished: () => resolve(server),\n    });\n    const server = new WebpackDevServer(compiler, config.devServer);\n    // Launch WebpackDevServer.\n    server.listen(port, WebpackEnvironment.HOST, error => {\n      if (error) {\n        ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n      }\n      if (typeof options.onWebpackFinished === 'function') {\n        options.onWebpackFinished(error);\n      }\n    });\n    webpackDevServerInstance = server;\n  });\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n  return {\n    url,\n    server,\n    port,\n    protocol,\n    host,\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise(res => {\n      if (webpackDevServerInstance) {\n        ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Stopping Webpack server');\n        webpackDevServerInstance.close(res);\n      }\n    });\n    webpackDevServerInstance = null;\n    devServerInfo = null;\n    webpackServerPort = null;\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      webpackServerPort: null,\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await openProjectAsync(projectRoot);\n}\n\nexport async function compileWebAppAsync(\n  projectRoot: string,\n  compiler: webpack.Compiler\n): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages;\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages.errors.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new Error(messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages.warnings.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          chalk.yellow(\n            '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n              'Most CI servers set it automatically.\\n'\n          )\n        );\n        return reject(new Error(messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nexport async function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        chalk.yellow('Compiled with warnings.\\n')\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  if (typeof env.offline === 'undefined') {\n    try {\n      const expoConfig = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n      // If offline isn't defined, check the version and keep offline enabled for SDK 38 and prior\n      if (expoConfig.exp.sdkVersion)\n        if (Versions.lteSdkVersion(expoConfig.exp, '38.0.0')) {\n          env.offline = true;\n        }\n    } catch {\n      // Ignore the error thrown by projects without an Expo config.\n    }\n  }\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n\n  await bundleWebAppAsync(projectRoot, config);\n\n  const hasSWPlugin = config.plugins?.find(item => {\n    return item?.constructor?.name === 'GenerateSW';\n  });\n  if (!hasSWPlugin) {\n    ProjectUtils.logInfo(\n      projectRoot,\n      WEBPACK_LOG_TAG,\n      chalk.green(\n        `Offline (PWA) support is not enabled in this build. ${chalk.dim(\n          learnMore('https://expo.fyi/enabling-web-service-workers')\n        )}\\n`\n      )\n    );\n  }\n}\n\nexport async function getProjectNameAsync(projectRoot: string): Promise<string> {\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  const webName = getNameFromConfig(exp).webName ?? exp.name;\n  return webName;\n}\n\nexport function isRunning(): boolean {\n  return !!webpackDevServerInstance;\n}\n\nexport function getServer(projectRoot: string): DevServer | null {\n  if (webpackDevServerInstance == null) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, 'Webpack is not running.');\n  }\n  return webpackDevServerInstance;\n}\n\nexport function getPort(): number | null {\n  return webpackServerPort;\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  const devServer = getServer(projectRoot);\n  if (!devServer) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(options: {\n  host?: string;\n  defaultPort?: number;\n  projectRoot: string;\n}): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort\n        ? options.defaultPort\n        : WebpackEnvironment.DEFAULT_PORT;\n    const port = await choosePortAsync(\n      options.projectRoot,\n      defaultPort,\n      'host' in options && options.host ? options.host : WebpackEnvironment.HOST\n    );\n    if (!port) {\n      throw new Error(`Port ${defaultPort} not available.`);\n    }\n    return port;\n  } catch (error) {\n    throw new XDLError('NO_PORT_FOUND', error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function createWebpackConfigAsync(\n  env: WebEnvironment,\n  options: CLIWebOptions = {}\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n\n  let config;\n  if (options.unimodulesOnly) {\n    const { withUnimodules } = require('@expo/webpack-config/addons');\n    config = withUnimodules({}, env);\n  } else {\n    config = await invokeWebpackConfigAsync(env);\n  }\n\n  return config;\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  const newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  const { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    isImageEditingEnabled,\n    mode,\n    https,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (WebpackEnvironment.isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Enable line to line mapped mode for all/specified modules.\n    // Line to line mapped mode uses a simple SourceMap where each line of the generated source is mapped to the same line of the original source.\n    // It’s a performance optimization. Only use it if your performance need to be better and you are sure that input lines match which generated lines.\n    // true enables it for all modules (not recommended)\n    output.devtoolLineToLine = true;\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Instead of numeric ids, give modules readable names for better debugging.\n    optimization.namedModules = true;\n    // Instead of numeric ids, give chunks readable names for better debugging.\n    optimization.namedChunks = true;\n    // Readable ids for better debugging.\n    // @ts-ignore Property 'moduleIds' does not exist.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    // @ts-ignore Property 'chunkIds' does not exist.\n    optimization.chunkIds = 'named';\n\n    if (optimization.splitChunks) {\n      optimization.splitChunks.name = true;\n    }\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nexport async function invokeWebpackConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const createExpoWebpackConfigAsync = require('@expo/webpack-config');\n    config = await createExpoWebpackConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nexport async function openProjectAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    const url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowser(url);\n    return { success: true, url };\n  } catch (e) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"]}