"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
const internal_1 = require("../internal");
function _apkCacheDirectory() {
    const dotExpoHomeDirectory = internal_1.UserSettings.dotExpoHomeDirectory();
    const dir = path_1.default.join(dotExpoHomeDirectory, 'android-apk-cache');
    fs_extra_1.default.mkdirpSync(dir);
    return dir;
}
async function downloadApkAsync(url, downloadProgressCallback) {
    if (!url) {
        const versions = await internal_1.Versions.versionsAsync();
        url = versions.androidUrl;
    }
    const filename = path_1.default.parse(url).name;
    const apkPath = path_1.default.join(_apkCacheDirectory(), `${filename}.apk`);
    if (await fs_extra_1.default.pathExists(apkPath)) {
        return apkPath;
    }
    await internal_1.Api.downloadAsync(url, apkPath, undefined, downloadProgressCallback);
    return apkPath;
}
exports.downloadApkAsync = downloadApkAsync;
//# sourceMappingURL=downloadApkAsync.js.map