{"version":3,"sources":["../../../src/commands/doctor/index.ts"],"names":["actionAsync","projectRoot","Doctor","validateExpoServersAsync","validateWithNetworkAsync","NO_ISSUES","Log","log","program","command","description","helpGroup","asyncActionProjectDir"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,eAAeA,WAAf,CAA2BC,WAA3B,EAAgD;AAC9C,QAAM,gCAAN,CAD8C,CAG9C;;AACA,QAAMC,cAAOC,wBAAP,CAAgCF,WAAhC,CAAN;;AAEA,MAAI,CAAC,MAAMC,cAAOE,wBAAP,CAAgCH,WAAhC,CAAP,MAAyDC,cAAOG,SAApE,EAA+E;AAC7EC,mBAAIC,GAAJ,CAAS,0CAAT;AACD;AACF;;AAEc,kBAAUC,OAAV,EAA4B;AACzCA,EAAAA,OAAO,CACJC,OADH,CACW,eADX,EAEGC,WAFH,CAEe,kCAFf,EAGGC,SAHH,CAGa,MAHb,EAIGC,qBAJH,CAIyBZ,WAJzB;AAKD","sourcesContent":["import { Command } from 'commander';\nimport { Doctor } from 'xdl';\n\nimport Log from '../../log';\nimport { warnUponCmdExe } from './windows';\n\nasync function actionAsync(projectRoot: string) {\n  await warnUponCmdExe();\n\n  // note: this currently only warns when something isn't right, it doesn't fail\n  await Doctor.validateExpoServersAsync(projectRoot);\n\n  if ((await Doctor.validateWithNetworkAsync(projectRoot)) === Doctor.NO_ISSUES) {\n    Log.log(`Didn't find any issues with the project!`);\n  }\n}\n\nexport default function (program: Command) {\n  program\n    .command('doctor [path]')\n    .description('Diagnose issues with the project')\n    .helpGroup('info')\n    .asyncActionProjectDir(actionAsync);\n}\n"],"file":"index.js"}