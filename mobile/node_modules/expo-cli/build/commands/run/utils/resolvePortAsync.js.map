{"version":3,"sources":["../../../../src/commands/run/utils/resolvePortAsync.ts"],"names":["resolvePortAsync","projectRoot","defaultPort","port","getenv","int","resolvedPort","Log","log","process","env","RCT_METRO_PORT","String"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,eAAeA,gBAAf,CACLC,WADK,EAELC,WAFK,EAGmB;AACxB,QAAMC,IAAI,GAAGD,WAAH,aAAGA,WAAH,cAAGA,WAAH,GAAkBE,kBAAOC,GAAP,CAAW,gBAAX,EAA6B,IAA7B,CAA5B,CADwB,CAGxB;;AACA,QAAMC,YAAY,GAAG,MAAM,wCAAgBL,WAAhB,EAA6BE,IAA7B,CAA3B;;AACA,MAAIG,YAAY,IAAI,IAApB,EAA0B;AACxBC,mBAAIC,GAAJ,CAAQ,4BAAR,EADwB,CAExB;;AACD,GAHD,MAGO;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,GAA6BC,MAAM,CAACN,YAAD,CAAnC;AACD;;AAED,SAAOA,YAAP;AACD","sourcesContent":["import getenv from 'getenv';\nimport { choosePortAsync } from 'xdl/build/utils/choosePortAsync';\n\nimport Log from '../../../log';\n\nexport async function resolvePortAsync(\n  projectRoot: string,\n  defaultPort?: number\n): Promise<number | null> {\n  const port = defaultPort ?? getenv.int('RCT_METRO_PORT', 8081);\n\n  // Only check the port when the bundler is running.\n  const resolvedPort = await choosePortAsync(projectRoot, port);\n  if (resolvedPort == null) {\n    Log.log('\\u203A Skipping dev server');\n    // Skip bundling if the port is null\n  } else {\n    // Use the new or resolved port\n    process.env.RCT_METRO_PORT = String(resolvedPort);\n  }\n\n  return resolvedPort;\n}\n"],"file":"resolvePortAsync.js"}