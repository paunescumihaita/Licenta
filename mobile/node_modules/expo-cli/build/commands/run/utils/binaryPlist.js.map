{"version":3,"sources":["../../../../src/commands/run/utils/binaryPlist.ts"],"names":["CHAR_CHEVRON_OPEN","CHAR_B_LOWER","parseBinaryPlistAsync","plistPath","parsePlistBuffer","fs","readFile","contents","info","plist","parse","toString","Array","isArray","binaryPlist","parseBuffer","Error"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAFA;AAIA,MAAMA,iBAAiB,GAAG,EAA1B;AACA,MAAMC,YAAY,GAAG,EAArB,C,CACA;AACA;;AAEO,eAAeC,qBAAf,CAAqCC,SAArC,EAAwD;AAC7D,SAAOC,gBAAgB,CAAC,MAAMC,mBAAGC,QAAH,CAAYH,SAAZ,CAAP,CAAvB;AACD;;AAEM,SAASC,gBAAT,CAA0BG,QAA1B,EAA4C;AACjD,MAAIA,QAAQ,CAAC,CAAD,CAAR,KAAgBP,iBAApB,EAAuC;AACrC,UAAMQ,IAAI,GAAGC,iBAAMC,KAAN,CAAYH,QAAQ,CAACI,QAAT,EAAZ,CAAb;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAyB,OAAOA,IAAI,CAAC,CAAD,CAAX;AACzB,WAAOA,IAAP;AACD,GAJD,MAIO,IAAID,QAAQ,CAAC,CAAD,CAAR,KAAgBN,YAApB,EAAkC;AACvC,UAAMO,IAAI,GAAGM,wBAAYC,WAAZ,CAAwBR,QAAxB,CAAb;;AACA,QAAIK,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAyB,OAAOA,IAAI,CAAC,CAAD,CAAX;AACzB,WAAOA,IAAP;AACD,GAJM,MAIA;AACL,UAAM,IAAIQ,KAAJ,CAAW,sCAAqCT,QAAQ,CAAC,CAAD,CAAR,CAAYI,QAAZ,CAAqB,EAArB,CAAyB,GAAzE,CAAN;AACD;AACF","sourcesContent":["import plist from '@expo/plist';\n// @ts-ignore\nimport binaryPlist from 'bplist-parser';\nimport fs from 'fs-extra';\n\nconst CHAR_CHEVRON_OPEN = 60;\nconst CHAR_B_LOWER = 98;\n// .mobileprovision\n// const CHAR_ZERO = 30;\n\nexport async function parseBinaryPlistAsync(plistPath: string) {\n  return parsePlistBuffer(await fs.readFile(plistPath));\n}\n\nexport function parsePlistBuffer(contents: Buffer) {\n  if (contents[0] === CHAR_CHEVRON_OPEN) {\n    const info = plist.parse(contents.toString());\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else if (contents[0] === CHAR_B_LOWER) {\n    const info = binaryPlist.parseBuffer(contents);\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else {\n    throw new Error(`Cannot parse plist of type byte (0x${contents[0].toString(16)})`);\n  }\n}\n"],"file":"binaryPlist.js"}