"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _runAndroid() {
  const data = require("./android/runAndroid");

  _runAndroid = function () {
    return data;
  };

  return data;
}

function _runIos() {
  const data = require("./ios/runIos");

  _runIos = function () {
    return data;
  };

  return data;
}

function _default(program) {
  program.command('run:android [path]').helpGroup('internal').description('Run the Android app binary locally').option('-d, --device [device]', 'Device name to build the app on').option('-p, --port <port>', 'Port to start the Metro bundler on. Default: 8081').option('--variant [name]', '(Android) build variant', 'debug').asyncActionProjectDir(_runAndroid().runAndroidActionAsync);
  program.command('run:ios [path]').description('Run the iOS app binary locally').helpGroup('internal').option('-d, --device [device]', 'Device name or UDID to build the app on').option('-p, --port <port>', 'Port to start the Metro bundler on. Default: 8081').option('--scheme <scheme>', 'Scheme to build').option('--configuration <configuration>', 'Xcode configuration to use. Debug or Release. Default: Debug').asyncActionProjectDir(_runIos().runIosActionAsync, {
    checkConfig: false
  });
}
//# sourceMappingURL=index.js.map