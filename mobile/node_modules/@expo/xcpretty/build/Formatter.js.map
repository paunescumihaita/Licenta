{"version":3,"file":"Formatter.js","sourceRoot":"","sources":["../src/Formatter.ts"],"names":[],"mappings":"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","sourcesContent":["import { codeFrameColumns } from '@babel/code-frame';\nimport chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport { Matchers } from './Matchers';\nimport { Failure, Parser } from './Parser';\nimport { switchRegex } from './switchRegex';\n\nenum Status {\n  Pass = 'pass',\n  Fail = 'fail',\n  Pending = 'pending',\n  Error = 'error',\n  Completion = 'completion',\n  Measure = 'measure',\n}\n\nconst USE_ASCII = false;\n\nconst PASS = '✓';\nconst FAIL = '✗';\nconst PENDING = '⧖';\nconst COMPLETION = '\\u203A'; //'▸';\nconst MEASURE = '◷';\nconst ERROR = USE_ASCII ? '[x]' : '❌ ';\nconst WARNING = USE_ASCII ? '[!]' : '⚠️ ';\nconst INDENT = '    ';\nconst BREADCRUMB = '»';\n\nfunction format(command: string, argumentText = '', success = true) {\n  const symbol = statusSymbol(success ? Status.Completion : Status.Fail);\n  return [symbol, chalk.bold(command), argumentText].join(' ').trim();\n}\n\nfunction formatTest(testCase: string, status: Status) {\n  return [statusSymbol(status), testCase].join(' ').trim();\n}\n\nfunction heading(prefix: string, text: string, description: string): string {\n  return [prefix, chalk.white(text), description].join(' ').trim();\n}\n\nfunction statusSymbol(status: Status) {\n  switch (status) {\n    case Status.Pass:\n      return chalk.green(PASS);\n    case Status.Fail:\n      return chalk.red(FAIL);\n    case Status.Pending:\n      return chalk.cyan(PENDING);\n    case Status.Error:\n      return chalk.red(ERROR);\n    case Status.Completion:\n      return chalk.white(COMPLETION);\n    case Status.Measure:\n      return chalk.magenta(MEASURE);\n    default:\n      return '';\n  }\n}\n\nfunction coloredTime(time: string) {\n  const flt = parseFloat(time);\n  if (flt >= 0 && flt <= 0.025) {\n    return time;\n  } else if (flt >= 0.026 && flt <= 0.1) {\n    return chalk.yellow(time);\n  }\n  return chalk.red(time);\n}\n\nfunction capitalize(string: string): string {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction relativePath(projectRoot: string, filePath: string): string {\n  return slash(path.relative(projectRoot, filePath));\n}\n\nfunction formatBreadCrumb(fileName: string, target?: string, project?: string): string {\n  // TODO: Simplify\n  return [[project, target].filter(Boolean).join(`/`), fileName]\n    .filter(Boolean)\n    .join(` ${BREADCRUMB} `);\n}\n\nexport class Formatter {\n  static format = format;\n  static formatBreadCrumb = formatBreadCrumb;\n\n  parser: Parser;\n\n  errors: string[] = [];\n  warnings: string[] = [];\n\n  constructor(\n    public props: {\n      // isASCII: boolean;\n      // isColorDisabled: boolean;\n      projectRoot: string;\n    }\n  ) {\n    this.parser = new Parser(this);\n  }\n\n  pipe(data: string): string[] {\n    const lines: string[] = [];\n    data.split(os.EOL).forEach(line => {\n      const results = this.parser.parse(line);\n      if (typeof results === 'string' && results.trim()) {\n        lines.push(results);\n      }\n    });\n    return lines;\n  }\n\n  private dimConfiguration(configuration: string): string {\n    return chalk.dim(`(${configuration})`);\n  }\n\n  formatAnalyze(fileName: string, filePath: string, target?: string, project?: string): string {\n    return format('Analyzing', formatBreadCrumb(fileName, target, project));\n  }\n  formatBuildTarget(target: string, project: string, configuration: string): string {\n    return format(\n      'Building',\n      this.dimConfiguration(formatBreadCrumb(configuration, target, project))\n    );\n  }\n  formatAggregateTarget(target: string, project: string, configuration: string): string {\n    return format(\n      'Aggregate',\n      this.dimConfiguration(formatBreadCrumb(configuration, target, project))\n    );\n  }\n  formatAnalyzeTarget(target: string, project: string, configuration: string): string {\n    return format(\n      'Analyzing',\n      this.dimConfiguration(formatBreadCrumb(configuration, target, project))\n    );\n  }\n  formatClean(project: string, target: string, configuration: string): string {\n    return '';\n  }\n  formatCleanTarget(target: string, project: string, configuration: string): string {\n    return format(\n      'Cleaning',\n      this.dimConfiguration(formatBreadCrumb(configuration, target, project))\n    );\n  }\n  formatCompile(fileName: string, filePath: string, target?: string, project?: string): string {\n    return format('Compiling', formatBreadCrumb(fileName, target, project));\n  }\n  formatCompileCommand(compilerCommand: string, filePath: string): string {\n    return '';\n  }\n  formatCompileStoryboard(\n    fileName: string,\n    filePath: string,\n    target?: string,\n    project?: string\n  ): string {\n    return format('Compiling', formatBreadCrumb(fileName, target, project));\n  }\n  formatCompileXib(fileName: string, filePath: string, target?: string, project?: string): string {\n    return format('Compiling', formatBreadCrumb(fileName, target, project));\n  }\n  formatCopyHeaderFile(source: string, target: string): string {\n    return format('Copying', path.basename(source));\n  }\n  formatCopyPlistFile(source: string, target: string): string {\n    return format('Copying', path.basename(source));\n  }\n  formatCopyStringsFile(filePath: string, target?: string, project?: string): string {\n    const relativeFile = relativePath(this.props.projectRoot, filePath);\n    return format('Copying', formatBreadCrumb(relativeFile, target, project));\n  }\n  formatCpresource(filePath: string): string {\n    return format('Copying', relativePath(this.props.projectRoot, filePath));\n  }\n  formatGenerateDsym(dsym: string, target?: string, project?: string): string {\n    return format(`Generating debug`, formatBreadCrumb(`'${dsym}'`, target, project));\n  }\n  formatLinking(\n    file: string,\n    targetName: string,\n    arch?: string,\n    target?: string,\n    project?: string\n  ): string {\n    return format('Linking', formatBreadCrumb(file, target, project));\n  }\n  formatLibtool(library: string, target?: string, project?: string): string {\n    return format('Building library', formatBreadCrumb(library, target, project));\n  }\n  formatPendingTest(suite: string, test: string): string {\n    return INDENT + formatTest(`${test} [PENDING]`, Status.Pending);\n  }\n  formatPassingTest(suite: string, test: string, time: string): string {\n    return INDENT + formatTest(`${test} (${coloredTime(time)} seconds)`, Status.Pass);\n  }\n  formatMeasuringTest(suite: string, test: string, time: string): string {\n    return INDENT + formatTest(`${test} measured (${coloredTime(time)} seconds)`, Status.Measure);\n  }\n  formatFailingTest(suite: string, test: string, reason: string, filePath: string): string {\n    return INDENT + formatTest(`${test}, ${reason}`, Status.Fail);\n  }\n  formatProcessPch(fileName: string, filePath: string, target?: string, project?: string): string {\n    return format('Precompiling', formatBreadCrumb(fileName, target, project));\n  }\n  formatProcessPchCommand(filePath: string): string {\n    return '';\n  }\n  formatPhaseSuccess(phaseName: string): string {\n    return format(capitalize(phaseName.toLowerCase()), 'Succeeded', true);\n  }\n  formatPhaseScriptExecution(scriptName: string, target?: string, project?: string): string {\n    return format('Running script', formatBreadCrumb(`'${scriptName}'`, target, project));\n  }\n  formatProcessInfoPlist(\n    fileName: string,\n    filePath: string,\n    target?: string,\n    project?: string\n  ): string {\n    return format('Processing', formatBreadCrumb(fileName, target, project));\n  }\n  formatCodesign(fileName: string, filePath: string, target?: string, project?: string): string {\n    return format('Signing', formatBreadCrumb(fileName, target, project));\n  }\n  formatPreprocess(file: string): string {\n    return format('Preprocessing', file);\n  }\n  formatPbxcp(file: string): string {\n    return format('Copying', file);\n  }\n  formatShellCommand(command: string, args: string): string {\n    return '';\n  }\n  formatTestRunFinished(name: string, time: string): string {\n    return '';\n  }\n\n  formatTouch(filePath: string, fileName: string): string {\n    return format('Touching', fileName);\n  }\n  formatTestRunStarted(name: string): string {\n    return heading('Test Suite', name, 'started');\n  }\n  formatTestSuiteStarted(name: string): string {\n    return heading('', name, '');\n  }\n  formatTiffutil(file: string): string {\n    return format('Validating', file);\n  }\n  formatWriteFile(file: string): string {\n    return '';\n  }\n  formatOther(text: string): string {\n    return '';\n  }\n  formatCheckDependencies(text: string): string {\n    return format('Check Dependencies');\n  }\n\n  formatCleanRemove(msg: string): string {\n    return '';\n  }\n\n  formatWriteAuxiliaryFiles(text: string): string {\n    return '';\n  }\n\n  formatWillNotBeCodeSigned(message: string): string {\n    const results = `${chalk.yellow(WARNING + ' ' + message)}`;\n    this.warnings.push(results);\n    return results;\n  }\n\n  // COMPILER / LINKER ERRORS AND WARNINGS\n  /**\n   *\n   * @param fileName 'SampleTest.m',\n   * @param filePathAndLocation '/Users/foo/bar.m:12:59',\n   * @param reason 'expected identifier',\n   * @param line '                [[thread should] equal:thread.];',\n   * @param cursor '                                           ^'\n   */\n  formatCompileError(\n    fileName: string,\n    filePathAndLocation: string,\n    reason: string,\n    line: string,\n    cursor: string\n  ): string {\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(filePathAndLocation);\n    const results = formatWarningOrError({\n      isError: true,\n      filePath,\n      reason,\n      cursor,\n      lineText: line,\n      lineNumber,\n      columnNumber,\n      projectRoot: this.props.projectRoot,\n    });\n    this.errors.push(results);\n    return results;\n  }\n\n  formatError(message: string): string {\n    const results = `\\n${chalk.red(ERROR + ' ' + message)}\\n\\n`;\n    this.errors.push(results);\n    return results;\n  }\n\n  formatFileMissingError(reason: string, filePath: string): string {\n    const results = `\\n${chalk.red(ERROR + ' ' + reason)} ${filePath}\\n\\n`;\n    this.errors.push(results);\n    return results;\n  }\n\n  formatLdWarning(reason: string): string {\n    const results = `${chalk.yellow(WARNING + ' ' + reason)}`;\n    this.warnings.push(results);\n    return results;\n  }\n\n  formatUndefinedSymbols(message: string, symbol: string, reference: string): string {\n    const symbols = chalk.gray(`┌─ Symbol: ${symbol}\\n└─ Referenced from: ${reference}`);\n    const results = `${chalk.red(ERROR + ' ' + message)}\\n${symbols}\\n`;\n    this.errors.push(results);\n    return results;\n  }\n\n  formatDuplicateSymbols(message: string, filePaths: string[], isWarning: boolean): string {\n    const formattedMessage = isWarning\n      ? chalk.yellow(WARNING + ' ' + message)\n      : chalk.red(ERROR + ' ' + message);\n    const symbols = chalk.gray(\n      filePaths\n        .map((p, i) => {\n          const branch = i === filePaths.length - 1 ? '└─' : i === 0 ? '┌─' : '├─';\n          return `${branch} ${path.basename(p)}`;\n        })\n        .join('\\n')\n    );\n    const results = `${formattedMessage}\\n${symbols}\\n`;\n\n    if (isWarning) {\n      this.warnings.push(results);\n    } else {\n      this.errors.push(results);\n    }\n    return results;\n  }\n\n  /**\n   * In: `The iOS Simulator deployment target 'IPHONEOS_DEPLOYMENT_TARGET' is set to 8.0, but the range of supported deployment target versions is 9.0 to 14.3.99. (in target 'boost-for-react-native' from project 'Pods')`\n   * Out: `⚠️ Pods/boost-for-react-native: iOS@8.0 version mismatch. Expected >= 9.0 < 14.3.99`\n   *\n   * @param os iOS\n   * @param deploymentTarget IPHONEOS_DEPLOYMENT_TARGET\n   * @param version 8.0\n   * @param minVersion 9.0\n   * @param maxVersion 14.3.99\n   * @param target boost-for-react-native\n   * @param project Pods\n   */\n  formatVersionMismatchWarning(\n    os: string,\n    deploymentTarget: string,\n    version: string,\n    minVersion: string,\n    maxVersion: string,\n    target: string,\n    project: string\n  ): string {\n    const packageName = [project, target].join('/');\n    const platform = chalk.bold(`${packageName}:`);\n    const packageNameWithVersion = chalk.greenBright(os) + chalk.cyan`@` + chalk.magenta(version);\n    const expectedRange = `>= ${minVersion} <= ${maxVersion}`;\n    return `${WARNING} ${platform} ${packageNameWithVersion} deployment version mismatch, expected ${expectedRange}`;\n  }\n\n  /**\n   * In: `Skipping duplicate build file in Compile Sources build phase: /Users/evanbacon/Documents/GitHub/expo/ios/Exponent/Kernel/ReactAppManager/EXReactAppManager.mm (in target 'Exponent' from project 'Exponent')`\n   * Out:\n   * `⚠️ Skipping duplicate file: Exponent/Kernel/ReactAppManager/EXReactAppManager.mm:\n   *    Remove: Exponent » Exponent » Build Phases » Compile Sources » EXReactAppManager.mm`\n   *\n   * @param filePath\n   * @param buildPhase 'Compile Sources'\n   * @param target Exponent-watch-app\n   * @param project Exponent\n   */\n  formatDuplicateFileCompilerWarning(\n    filePath: string,\n    buildPhase: string,\n    target: string,\n    project: string\n  ): string {\n    const message = `${chalk.yellow`Skipping duplicate file:`} ${relativePath(\n      this.props.projectRoot,\n      filePath\n    )}`;\n    const fileName = path.basename(filePath);\n    const crumbs = chalk.gray(\n      'Remove: ' +\n        ['Xcode', `${project}/${target}`, 'Build Phases', buildPhase, fileName].join(\n          ` ${BREADCRUMB} `\n        )\n    );\n\n    return `${WARNING} ${message}\\n   ${crumbs}\\n`;\n  }\n\n  /**\n   * In: `The Copy Bundle Resources build phase contains this target's Info.plist file '/Users/evanbacon/Documents/GitHub/expo/ios/Exponent/Supporting/Info.plist'. (in target 'Exponent' from project 'Exponent')`\n   * Out:\n   * `⚠️ Target's Info.plist file is incorrectly linked: Exponent/Supporting/Info.plist:\n   *    Remove: Exponent » Exponent » Build Phases » Copy Bundle Resources » Info.plist`\n   *\n   * @param filePath\n   * @param reservedFileDescription 'entitlements'\n   * @param target Exponent-watch-app\n   * @param project Exponent\n   */\n  formatReservedFileInCopyBundleResourcesCompilerWarning(\n    filePath: string,\n    reservedFileDescription: string,\n    target: string,\n    project: string\n  ): string {\n    const message = `${chalk.yellow`Target's ${chalk.bold(\n      reservedFileDescription\n    )} file is incorrectly linked:`} ${relativePath(this.props.projectRoot, filePath)}`;\n    const fileName = path.basename(filePath);\n    const crumbs = chalk.gray(\n      'Remove: ' +\n        ['Xcode', `${project}/${target}`, 'Build Phases', 'Copy Bundle Resources', fileName].join(\n          ` ${BREADCRUMB} `\n        )\n    );\n\n    return `${WARNING} ${message}\\n   ${crumbs}\\n`;\n  }\n\n  formatMissingFileCompilerWarning(filePath: string): string {\n    return `${WARNING} ${chalk.yellow`No such file or directory:`} ${filePath}`;\n  }\n\n  formatGenericWarning(message: string): string {\n    return INDENT + chalk.yellow(message);\n  }\n\n  formatWarning(message: string): string {\n    const results = switchRegex(message, [\n      [\n        Matchers.Warnings.VERSION_MISMATCH,\n        ([, $1, $2, $3, $4, $5, $6, $7]) => {\n          return this.formatVersionMismatchWarning($1, $2, $3, $4, $5, $6, $7);\n        },\n      ],\n      [\n        Matchers.Warnings.MISSING_FILE_COMPILER_WARNING_MATCHER,\n        ([, $1]) => {\n          return this.formatMissingFileCompilerWarning($1);\n        },\n      ],\n      [\n        Matchers.Warnings.SKIPPING_DUPLICATE_FILE,\n        ([, $1, $2, $3, $4]) => {\n          return this.formatDuplicateFileCompilerWarning($2, $1, $3, $4);\n        },\n      ],\n      [\n        Matchers.Warnings.TARGETS_FILE_INCLUDED,\n        ([, $1, $2, $3, $4]) => {\n          return this.formatReservedFileInCopyBundleResourcesCompilerWarning($2, $1, $3, $4);\n        },\n      ],\n      [null, () => this.formatGenericWarning(message)],\n    ]);\n\n    this.warnings.push(results);\n\n    return results;\n  }\n\n  // TODO: see how we can unify formatError and formatCompileError,\n  //       the same for warnings\n  formatCompileWarning(\n    fileName: string,\n    filePathAndLocation: string,\n    reason: string,\n    line: string,\n    cursor: string\n  ): string {\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(filePathAndLocation);\n    if (this.shouldShowCompileWarning(filePath, lineNumber, columnNumber)) {\n      const results = formatWarningOrError({\n        isError: false,\n        filePath,\n        reason,\n        cursor,\n        lineText: line,\n        lineNumber,\n        columnNumber,\n        projectRoot: this.props.projectRoot,\n      });\n      this.warnings.push(results);\n      return results;\n    }\n    return '';\n  }\n\n  shouldShowCompileWarning(filePath: string, lineNumber?: string, columnNumber?: string): boolean {\n    return true;\n  }\n\n  finish() {}\n\n  // Override if you want to catch something specific with your regex\n  prettyFormat(text: string) {\n    return this.parser.parse(text);\n  }\n\n  // If you want to print inline, override #optionalNewline with ''\n  optionalNewline() {\n    return '\\n';\n  }\n\n  // Will be printed by default. Override with '' if you don't want summary\n  formatTestSummary(executedMessage: string, failuresPerSuite: Record<string, Failure[]>): string {\n    const failures = this.formatFailures(failuresPerSuite);\n    let finalMessage = '';\n    if (!failures) {\n      finalMessage = chalk.green(executedMessage);\n    } else {\n      finalMessage = chalk.red(executedMessage);\n    }\n\n    const text = [failures, finalMessage].join('\\n\\n\\n').trim();\n    return `\\n\\n${text}`;\n  }\n\n  formatFailures(failuresPerSuite: Record<string, Failure[]>): string {\n    return Object.entries(failuresPerSuite)\n      .map(([suite, failures]) => {\n        const formattedFailures = failures.map(failure => this.formatFailure(failure)).join('\\n\\n');\n\n        return `\\n${suite}\\n${formattedFailures}`;\n      })\n      .join('\\n');\n  }\n\n  formatFailure(f: Failure): string {\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(f.filePath);\n\n    return formatWarningOrError({\n      isError: true,\n      testName: f.testCase,\n      filePath,\n      reason: f.reason,\n      // cursor,\n      lineNumber,\n      columnNumber,\n      projectRoot: this.props.projectRoot,\n    });\n  }\n}\n\nfunction formatPaths(config: { filePath: string | null; line?: number; col?: number }) {\n  const filePath = chalk.reset.cyan(config.filePath);\n  return (\n    chalk.dim('(') +\n    filePath +\n    chalk.dim(`:${[config.line, config.col].filter(Boolean).join(':')})`)\n  );\n}\n\n/**\n * Split a string like `/Users/foo/bar.m:420:68` into its components.\n *\n * @param filePath '/Users/foo/bar.m:420:68'\n */\nfunction splitPathInfo(\n  filePathAndLocation: string\n): { filePath: string; lineNumber?: string; columnNumber?: string } {\n  const [path, line, column] = filePathAndLocation.split(':');\n\n  return {\n    filePath: path || filePathAndLocation,\n    lineNumber: line,\n    columnNumber: column,\n  };\n}\n\nfunction parseOptionalInt(text?: string): number | undefined {\n  if (!text) return undefined;\n  try {\n    return parseInt(text, 10);\n  } catch {\n    return undefined;\n  }\n}\n\nfunction formatWarningOrError({\n  filePath,\n  reason,\n  cursor,\n  lineText,\n  lineNumber,\n  columnNumber,\n  projectRoot,\n  isError,\n}: {\n  isError: boolean;\n  testName?: string;\n  lineText?: string;\n  filePath: string;\n  cursor?: string;\n  reason: string;\n  lineNumber?: string;\n  columnNumber?: string;\n  projectRoot: string;\n}) {\n  // TODO: Use testName for errors\n\n  const line = parseOptionalInt(lineNumber) || 0;\n  const column = parseOptionalInt(columnNumber);\n  const color = isError ? chalk.red : chalk.yellow;\n  const icon = color(isError ? ERROR : WARNING);\n\n  try {\n    const raw = fs.readFileSync(filePath, 'utf8');\n    const location = { start: { line, column } };\n    const framed = codeFrameColumns(raw, location, {\n      // TODO: Support iOS languages: C++, Objc, swift, Ruby, Bash\n      // Maybe something like prism but for terminals?\n      highlightCode: false,\n      // Remove `(_Nonnull, _Nullable, or _Null_unspecified)` options\n      message: color(grayOutMatch(reason, /(\\[-.*?\\])/).replace(/(\\(.*?\\)\\s?)/, '')),\n    });\n\n    const relativeFilePath = filePath ? slash(path.relative(projectRoot, filePath)) : null;\n\n    const formattedPath = formatPaths({\n      filePath: relativeFilePath,\n      col: column,\n      line,\n    });\n\n    return `\\n${icon} ${formattedPath}\\n\\n${framed}\\n`;\n  } catch {\n    // TODO: Format legacy like JS\n    return `\\n${icon} ${filePath}: ${color(reason)}\\n\\n${lineText}\\n${chalk.cyan(cursor)}\\n`;\n  }\n}\n\n// Dim values like `[-Wnullability-completeness]`\nfunction grayOutMatch(text: string, reg: RegExp): string {\n  return replaceMatch(text, reg, chalk.gray.dim);\n}\n\nfunction replaceMatch(text: string, reg: RegExp, callback: (text: string) => string): string {\n  const match = text.match(reg);\n  if (match?.length) {\n    return text.replace(reg, callback(match[0]));\n  }\n  return text;\n}\n\nfunction slash(path: string) {\n  const isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path);\n  const hasNonAscii = /[^\\u0000-\\u0080]+/.test(path); // eslint-disable-line no-control-regex\n\n  if (isExtendedLengthPath || hasNonAscii) {\n    return path;\n  }\n\n  return path.replace(/\\\\/g, '/');\n}\n"]}