{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useColorScheme;var React=_interopRequireWildcard(require(\"react\"));var _Appearance=_interopRequireDefault(require(\"../Appearance\"));function useColorScheme(){var _React$useState=React.useState(_Appearance.default.getColorScheme()),colorScheme=_React$useState[0],setColorScheme=_React$useState[1];React.useEffect(function(){function listener(appearance){setColorScheme(appearance.colorScheme);}_Appearance.default.addChangeListener(listener);return function(){return _Appearance.default.removeChangeListener(listener);};});return colorScheme;}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Aplicatie/Licenta/web/node_modules/react-native-web/dist/exports/useColorScheme/index.js"],"names":["useColorScheme","_React$useState","React","useState","Appearance","getColorScheme","colorScheme","setColorScheme","useEffect","listener","appearance","addChangeListener","removeChangeListener"],"mappings":"gQASA,oDACA,iEACe,QAASA,CAAAA,cAAT,EAA0B,CACvC,GAAIC,CAAAA,eAAe,CAAGC,KAAK,CAACC,QAAN,CAAeC,oBAAWC,cAAX,EAAf,CAAtB,CACIC,WAAW,CAAGL,eAAe,CAAC,CAAD,CADjC,CAEIM,cAAc,CAAGN,eAAe,CAAC,CAAD,CAFpC,CAIAC,KAAK,CAACM,SAAN,CAAgB,UAAY,CAC1B,QAASC,CAAAA,QAAT,CAAkBC,UAAlB,CAA8B,CAC5BH,cAAc,CAACG,UAAU,CAACJ,WAAZ,CAAd,CACD,CAEDF,oBAAWO,iBAAX,CAA6BF,QAA7B,EACA,MAAO,WAAY,CACjB,MAAOL,qBAAWQ,oBAAX,CAAgCH,QAAhC,CAAP,CACD,CAFD,CAGD,CATD,EAUA,MAAOH,CAAAA,WAAP,CACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport Appearance from '../Appearance';\nexport default function useColorScheme() {\n  var _React$useState = React.useState(Appearance.getColorScheme()),\n      colorScheme = _React$useState[0],\n      setColorScheme = _React$useState[1];\n\n  React.useEffect(function () {\n    function listener(appearance) {\n      setColorScheme(appearance.colorScheme);\n    }\n\n    Appearance.addChangeListener(listener);\n    return function () {\n      return Appearance.removeChangeListener(listener);\n    };\n  });\n  return colorScheme;\n}"]},"metadata":{},"sourceType":"script"}