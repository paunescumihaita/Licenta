{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var React=_interopRequireWildcard(require(\"react\"));var _withNavigation=_interopRequireDefault(require(\"./withNavigation\"));function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var EventNameToPropName={willFocus:'onWillFocus',didFocus:'onDidFocus',willBlur:'onWillBlur',didBlur:'onDidBlur'};var EventNames=Object.keys(EventNameToPropName);var NavigationEvents=function(_React$Component){(0,_inherits2.default)(NavigationEvents,_React$Component);var _super=_createSuper(NavigationEvents);function NavigationEvents(){var _this;(0,_classCallCheck2.default)(this,NavigationEvents);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty((0,_assertThisInitialized2.default)(_this),\"getPropListener\",function(eventName){return _this.props[EventNameToPropName[eventName]];});return _this;}(0,_createClass2.default)(NavigationEvents,[{key:\"componentDidMount\",value:function componentDidMount(){this.subscribeAll();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.navigation!==prevProps.navigation){this.removeAll();this.subscribeAll();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.removeAll();}},{key:\"subscribeAll\",value:function subscribeAll(){var _this2=this;this.subscriptions={};EventNames.forEach(function(eventName){_this2.subscriptions[eventName]=_this2.props.navigation.addListener(eventName,function(){var propListener=_this2.getPropListener(eventName);return propListener&&propListener.apply(void 0,arguments);});});}},{key:\"removeAll\",value:function removeAll(){var _this3=this;EventNames.forEach(function(eventName){_this3.subscriptions[eventName].remove();});}},{key:\"render\",value:function render(){return null;}}]);return NavigationEvents;}(React.Component);var _default=(0,_withNavigation.default)(NavigationEvents);exports.default=_default;","map":{"version":3,"sources":["NavigationEvents.js"],"names":["EventNameToPropName","willFocus","didFocus","willBlur","didBlur","EventNames","Object","React","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","eventName","subscribeAll","propListener","removeAll","render","withNavigation"],"mappings":"8zBAAA,oDACA,wE,84BAEA,GAAMA,CAAAA,mBAAmB,CAAG,CAC1BC,SAAS,CADiB,aAAA,CAE1BC,QAAQ,CAFkB,YAAA,CAG1BC,QAAQ,CAHkB,YAAA,CAI1BC,OAAO,CAAE,WAJiB,CAA5B,CAOA,GAAMC,CAAAA,UAAU,CAAGC,MAAM,CAANA,IAAAA,CAAnB,mBAAmBA,CAAnB,C,GAEA,CAAA,gB,gIAA+C,2BAAA,6FAAA,IAAA,0CAAA,IAAA,wBAAA,6CAAA,IAAA,GAAA,eAAA,4CAAA,iBAAA,CAmB1BM,SAAAA,SAAD,QAAe,OAAA,KAAA,CAAWZ,mBAAmB,CAnBlB,SAmBkB,CAA9B,CAAf,EAnB2B,CAAA,CAAA,aAAA,C,2EAC7CQ,4BAAoB,CAIlB,KAAA,YAAA,GACD,C,kCAEDC,4BAAkB,SAAlBA,CAA8B,CAC5B,GAAI,KAAA,KAAA,CAAA,UAAA,GAA0BC,SAAS,CAAvC,UAAA,CAAoD,CAClD,KAAA,SAAA,GACA,KAAA,YAAA,GACD,CACF,C,oCAEDC,+BAAuB,CACrB,KAAA,SAAA,GACD,C,4BAIDE,uBAAe,iBACb,KAAA,aAAA,CAAA,EAAA,CAEAR,UAAU,CAAVA,OAAAA,CAAoBO,SAAAA,SAAD,CAAe,CAChC,MAAA,CAAA,aAAA,CAAA,SAAA,EAAgC,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,WAAA,CAAA,SAAA,CAE9B,UAAa,CACX,GAAME,CAAAA,YAAY,CAAG,MAAA,CAAA,eAAA,CAArB,SAAqB,CAArB,CACA,MAAOA,CAAAA,YAAY,EAAIA,YAAvB,MAAuBA,kBAAvB,CAJJ,CAAgC,CAAhC,CADFT,CAAAA,EASD,C,yBAEDU,oBAAY,iBACVV,UAAU,CAAVA,OAAAA,CAAoBO,SAAAA,SAAD,CAAe,CAChC,MAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,GADFP,CAAAA,EAGD,C,sBAEDW,iBAAS,CACP,MAAA,KAAA,CACD,C,8BA3C4BT,KAAK,CAApC,S,eA8CeU,4BAAf,gBAAeA,C","sourcesContent":["import * as React from 'react';\nimport withNavigation from './withNavigation';\n\nconst EventNameToPropName = {\n  willFocus: 'onWillFocus',\n  didFocus: 'onDidFocus',\n  willBlur: 'onWillBlur',\n  didBlur: 'onDidBlur',\n};\n\nconst EventNames = Object.keys(EventNameToPropName);\n\nclass NavigationEvents extends React.Component {\n  componentDidMount() {\n    // We register all navigation listeners on mount to ensure listener stability across re-render\n    // A former implementation was replacing (removing/adding) listeners on all update (if prop provided)\n    // but there were issues (see https://github.com/react-navigation/react-navigation/issues/5058)\n    this.subscribeAll();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.navigation !== prevProps.navigation) {\n      this.removeAll();\n      this.subscribeAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeAll();\n  }\n\n  getPropListener = (eventName) => this.props[EventNameToPropName[eventName]];\n\n  subscribeAll() {\n    this.subscriptions = {};\n\n    EventNames.forEach((eventName) => {\n      this.subscriptions[eventName] = this.props.navigation.addListener(\n        eventName,\n        (...args) => {\n          const propListener = this.getPropListener(eventName);\n          return propListener && propListener(...args);\n        }\n      );\n    });\n  }\n\n  removeAll() {\n    EventNames.forEach((eventName) => {\n      this.subscriptions[eventName].remove();\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withNavigation(NavigationEvents);\n"]},"metadata":{},"sourceType":"script"}