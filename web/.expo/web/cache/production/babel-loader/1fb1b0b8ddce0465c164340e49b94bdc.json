{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var _default=React.forwardRef(function(props,ref){return React.createElement(_reactNative.View,_extends({ref:ref,accessibilityRole:\"button\"},props));});exports.default=_default;","map":{"version":3,"sources":["GestureHandlerButton.web.tsx"],"names":[],"mappings":"qKAAA,oDACA,yC,oSAEe,KAAK,CAAL,UAAA,CAAuB,SAAA,KAAA,CAAA,GAAA,QACpC,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,CAAM,GAAG,CAAT,GAAA,CAAgB,iBAAiB,CAAC,QAAlC,CAAA,CADF,KACE,CAAA,CADoC,EAAvB,C","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\n\nexport default React.forwardRef<View>((props, ref) => (\n  <View ref={ref} accessibilityRole=\"button\" {...props} />\n));\n"]},"metadata":{},"sourceType":"script"}