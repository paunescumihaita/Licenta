{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.getHandler=getHandler;exports.createGestureHandler=createGestureHandler;exports.dropGestureHandler=dropGestureHandler;exports.getNodes=getNodes;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var gestures={};function getHandler(tag){if(tag in gestures)return gestures[tag];throw new Error(\"No handler for tag \".concat(tag));}function createGestureHandler(handlerTag,handler){if(handlerTag in gestures){throw new Error(\"Handler with tag \".concat(handlerTag,\" already exists\"));}gestures[handlerTag]=handler;gestures[handlerTag].handlerTag=handlerTag;}function dropGestureHandler(handlerTag){getHandler(handlerTag).destroy();delete gestures[handlerTag];}function getNodes(){return(0,_extends2.default)({},gestures);}","map":{"version":3,"sources":["NodeManager.ts"],"names":["gestures","tag","handlerTag","getHandler"],"mappings":"oXAGA,GAAMA,CAAAA,QAAgE,CAAtE,EAAA,CAEO,QAAA,CAAA,UAAA,CAAA,GAAA,CAAiC,CACtC,GAAIC,GAAG,GAAP,CAAA,QAAA,CAAqB,MAAOD,CAAAA,QAAQ,CAAf,GAAe,CAAf,CAErB,KAAM,IAAA,CAAA,KAAA,CAAA,sBAAA,MAAA,CAAN,GAAM,CAAA,CAAN,CACD,CAEM,QAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,OAAA,CAGL,CACA,GAAIE,UAAU,GAAd,CAAA,QAAA,CAA4B,CAC1B,KAAM,IAAA,CAAA,KAAA,CAAA,oBAAA,MAAA,CAAA,UAAA,CAAN,iBAAM,CAAA,CAAN,CACD,CACDF,QAAQ,CAARA,UAAQ,CAARA,CAJA,OAIAA,CAEAA,QAAQ,CAARA,UAAQ,CAARA,CAAAA,UAAAA,CAAAA,UAAAA,CACD,CAEM,QAAA,CAAA,kBAAA,CAAA,UAAA,CAAgD,CACrDG,UAAU,CAAVA,UAAU,CAAVA,CADqD,OACrDA,GAEA,MAAOH,CAAAA,QAAQ,CAAf,UAAe,CAAf,CACD,CAEM,QAAA,CAAA,QAAA,EAAoB,CACzB,+BAAYA,QAAZ,EACD","sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { Gestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<number, InstanceType<ValueOf<typeof Gestures>>> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) return gestures[tag];\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof Gestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"]},"metadata":{},"sourceType":"script"}