{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useElementLayout;var _ExecutionEnvironment=require(\"fbjs/lib/ExecutionEnvironment\");var _useLayoutEffect=_interopRequireDefault(require(\"../useLayoutEffect\"));var _UIManager=_interopRequireDefault(require(\"../../exports/UIManager\"));var DOM_LAYOUT_HANDLER_NAME='__reactLayoutHandler';var didWarn=!_ExecutionEnvironment.canUseDOM;var resizeObserver=null;function getResizeObserver(){if(_ExecutionEnvironment.canUseDOM&&typeof window.ResizeObserver!=='undefined'){if(resizeObserver==null){resizeObserver=new window.ResizeObserver(function(entries){entries.forEach(function(entry){var node=entry.target;var onLayout=node[DOM_LAYOUT_HANDLER_NAME];if(typeof onLayout==='function'){_UIManager.default.measure(node,function(x,y,width,height,left,top){var event={nativeEvent:{layout:{x:x,y:y,width:width,height:height,left:left,top:top}},timeStamp:Date.now()};Object.defineProperty(event.nativeEvent,'target',{enumerable:true,get:function get(){return entry.target;}});onLayout(event);});}});});}}else if(!didWarn){if(process.env.NODE_ENV!=='production'&&process.env.NODE_ENV!=='test'){console.warn('onLayout relies on ResizeObserver which is not supported by your browser. '+'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');didWarn=true;}}return resizeObserver;}function useElementLayout(ref,onLayout){var observer=getResizeObserver();(0,_useLayoutEffect.default)(function(){var node=ref.current;if(node!=null){node[DOM_LAYOUT_HANDLER_NAME]=onLayout;}},[ref,onLayout]);(0,_useLayoutEffect.default)(function(){var node=ref.current;if(node!=null&&observer!=null){if(typeof node[DOM_LAYOUT_HANDLER_NAME]==='function'){observer.observe(node);}else{observer.unobserve(node);}}return function(){if(node!=null&&observer!=null){observer.unobserve(node);}};},[ref,observer]);}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Aplicatie/Licenta/web/node_modules/react-native-web/dist/modules/useElementLayout/index.js"],"names":["DOM_LAYOUT_HANDLER_NAME","didWarn","canUseDOM","resizeObserver","getResizeObserver","window","ResizeObserver","entries","forEach","entry","node","target","onLayout","UIManager","measure","x","y","width","height","left","top","event","nativeEvent","layout","timeStamp","Date","now","Object","defineProperty","enumerable","get","process","env","NODE_ENV","console","warn","useElementLayout","ref","observer","current","observe","unobserve"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport useLayoutEffect from '../useLayoutEffect';\nimport UIManager from '../../exports/UIManager';\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\nvar didWarn = !canUseDOM;\nvar resizeObserver = null;\n\nfunction getResizeObserver() {\n  if (canUseDOM && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n\n          if (typeof onLayout === 'function') {\n            // We still need to measure the view because browsers don't yet provide\n            // border-box dimensions in the entry\n            UIManager.measure(node, function (x, y, width, height, left, top) {\n              var event = {\n                // $FlowFixMe\n                nativeEvent: {\n                  layout: {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    left: left,\n                    top: top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: function get() {\n                  return entry.target;\n                }\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\n      didWarn = true;\n    }\n  }\n\n  return resizeObserver;\n}\n\nexport default function useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  useLayoutEffect(function () {\n    var node = ref.current;\n\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]); // Observing is done in a separate effect to avoid this effect running\n  // when 'onLayout' changes.\n\n  useLayoutEffect(function () {\n    var node = ref.current;\n\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n\n    return function () {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}"]},"metadata":{},"sourceType":"script"}