{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _hammerjs=_interopRequireDefault(require(\"@egjs/hammerjs\"));var _State=require(\"../State\");var _PressGestureHandler2=_interopRequireDefault(require(\"./PressGestureHandler\"));var _utils=require(\"./utils\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var LongPressGestureHandler=function(_PressGestureHandler){(0,_inherits2.default)(LongPressGestureHandler,_PressGestureHandler);var _super=_createSuper(LongPressGestureHandler);function LongPressGestureHandler(){(0,_classCallCheck2.default)(this,LongPressGestureHandler);return _super.apply(this,arguments);}(0,_createClass2.default)(LongPressGestureHandler,[{key:\"minDurationMs\",get:function get(){return(0,_utils.isnan)(this.config.minDurationMs)?251:this.config.minDurationMs;}},{key:\"maxDist\",get:function get(){return(0,_utils.isnan)(this.config.maxDist)?9:this.config.maxDist;}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(_ref){var maxDistSq=_ref.maxDistSq;return!(0,_utils.isValidNumber)(maxDistSq);}},{key:\"getConfig\",value:function getConfig(){if(!this.hasCustomActivationCriteria){return{shouldCancelWhenOutside:true,maxDistSq:10};}return this.config;}},{key:\"getHammerConfig\",value:function getHammerConfig(){return(0,_extends2.default)({},(0,_get2.default)((0,_getPrototypeOf2.default)(LongPressGestureHandler.prototype),\"getHammerConfig\",this).call(this),{time:this.minDurationMs});}},{key:\"getState\",value:function getState(type){var _Hammer$INPUT_START$H;return(_Hammer$INPUT_START$H={},(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_START,_State.State.ACTIVE),(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_MOVE,_State.State.ACTIVE),(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_END,_State.State.END),(0,_defineProperty2.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_CANCEL,_State.State.FAILED),_Hammer$INPUT_START$H)[type];}}]);return LongPressGestureHandler;}(_PressGestureHandler2.default);var _default=LongPressGestureHandler;exports.default=_default;","map":{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["minDurationMs","isnan","maxDist","updateHasCustomActivationCriteria","maxDistSq","isValidNumber","getConfig","shouldCancelWhenOutside","getHammerConfig","time","getState","Hammer","State","FAILED"],"mappings":"m3BAEA,gEAEA,+BACA,mFACA,8B,2tBAIA,CAAA,uB,qWACMA,cAAwB,CAE1B,MAAOC,iBAAM,KAAA,MAAA,CAANA,aAAAA,EAAAA,GAAAA,CAAyC,KAAA,MAAA,CAAhD,aAAA,CACD,C,qBAEGC,cAAU,CAEZ,MAAOD,iBAAM,KAAA,MAAA,CAANA,OAAAA,EAAAA,CAAAA,CAAiC,KAAA,MAAA,CAAxC,OAAA,CACD,C,iDAEDE,gDAAyD,IAArBC,CAAAA,SAAqB,MAArBA,SAAqB,CACvD,MAAO,CAACC,yBAAR,SAAQA,CAAR,CACD,C,yBAEDC,oBAAY,CACV,GAAI,CAAC,KAAL,2BAAA,CAAuC,CAGrC,MAAO,CACLC,uBAAuB,CADlB,IAAA,CAELH,SAAS,CAAE,EAFN,CAAP,CAID,CACD,MAAO,MAAP,MAAA,CACD,C,+BAEDI,0BAAkB,CAChB,qJAGEC,IAAI,CAAE,KAAKT,aAHb,GAKD,C,wBAEDU,kBAAQ,IAARA,CAA8C,2BAC5C,MAAO,6EACJC,kBAAD,WADK,CACiBC,aADjB,MAAA,qDAEJD,kBAAD,UAFK,CAEgBC,aAFhB,MAAA,qDAGJD,kBAAD,SAHK,CAGeC,aAHf,GAAA,qDAIJD,kBAAD,YAJK,CAIkBC,aAAMC,MAJxB,yBAAP,IAAO,CAAP,CAMD,C,qCA1CH,6B,eA6CA,uB","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\nimport { Config } from './GestureHandler';\nimport { HammerInputNames } from './constants';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs(): number {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }: Config) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type: keyof typeof HammerInputNames) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n"]},"metadata":{},"sourceType":"script"}