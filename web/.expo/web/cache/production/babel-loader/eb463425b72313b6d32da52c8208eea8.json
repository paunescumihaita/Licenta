{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _reactNavigation=require(\"react-navigation\");var _reactNativeIphoneXHelper=require(\"react-native-iphone-x-helper\");var _HeaderSegment=_interopRequireWildcard(require(\"./HeaderSegment\"));var _HeaderTitle=_interopRequireDefault(require(\"./HeaderTitle\"));var _debounce=_interopRequireDefault(require(\"../../utils/debounce\"));function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var Header=React.memo(function Header(props){var scene=props.scene,previous=props.previous,layout=props.layout,insets=props.insets,navigation=props.navigation,styleInterpolator=props.styleInterpolator;var options=scene.descriptor.options;var title=typeof options.headerTitle!=='function'&&options.headerTitle!==undefined?options.headerTitle:options.title!==undefined?options.title:scene.route.routeName;var leftLabel;if(options.headerBackTitle!==undefined){leftLabel=options.headerBackTitle;}else if(previous){var o=previous.descriptor.options;leftLabel=typeof o.headerTitle!=='function'&&o.headerTitle!==undefined?o.headerTitle:o.title!==undefined?o.title:previous.route.routeName;}var goBack=React.useCallback((0,_debounce.default)(function(){var _navigation$dangerous;var key=navigation.isFirstRouteInParent()?(_navigation$dangerous=navigation.dangerouslyGetParent())===null||_navigation$dangerous===void 0?void 0:_navigation$dangerous.state.key:scene.route.key;if(key!==undefined){navigation.dispatch(_reactNavigation.StackActions.pop({key:key}));}},50),[navigation,scene.route.key]);return React.createElement(_HeaderSegment.default,_extends({},options,{insets:insets,layout:layout,scene:scene,title:title,leftLabel:leftLabel,headerTitle:typeof options.headerTitle!=='function'?function(props){return React.createElement(_HeaderTitle.default,props);}:options.headerTitle,onGoBack:previous?goBack:undefined,styleInterpolator:styleInterpolator}));});Object.defineProperty(Header,'HEIGHT',{get:function get(){console.warn(\"Deprecation in 'createStackNavigator': 'Header.HEIGHT' will be removed in a future version. Use 'useHeaderHeight' or 'HeaderHeightContext' instead\");return(0,_HeaderSegment.getDefaultHeaderHeight)(_reactNative.Dimensions.get('window'),(0,_reactNativeIphoneXHelper.getStatusBarHeight)(true));}});var _default=Header;exports.default=_default;","map":{"version":3,"sources":["Header.tsx"],"names":["Header","styleInterpolator","options","scene","title","leftLabel","o","previous","goBack","debounce","key","navigation","props","Object","get","console","getDefaultHeaderHeight","Dimensions","getStatusBarHeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport { StackActions } from 'react-navigation';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\n\nimport HeaderSegment, { getDefaultHeaderHeight } from './HeaderSegment';\n\nimport HeaderTitle from './HeaderTitle';\nimport debounce from '../../utils/debounce';\nimport type { StackHeaderProps, StackHeaderTitleProps } from '../../types';\n\nconst Header = React.memo(function Header(props: StackHeaderProps) {\n  const {\n    scene,\n    previous,\n    layout,\n    insets,\n    navigation,\n    styleInterpolator,\n  } = props;\n  const { options } = scene.descriptor;\n  const title =\n    typeof options.headerTitle !== 'function' &&\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.routeName;\n\n  let leftLabel;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    const o = previous.descriptor.options;\n\n    leftLabel =\n      typeof o.headerTitle !== 'function' && o.headerTitle !== undefined\n        ? o.headerTitle\n        : o.title !== undefined\n        ? o.title\n        : previous.route.routeName;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      const key = navigation.isFirstRouteInParent()\n        ? // If we're the first route, we're going back to a parent navigator\n          // So we need to get the key of the route we're nested in\n          navigation.dangerouslyGetParent()?.state.key\n        : scene.route.key;\n\n      if (key !== undefined) {\n        navigation.dispatch(StackActions.pop({ key }));\n      }\n    }, 50),\n    [navigation, scene.route.key]\n  );\n\n  return (\n    <HeaderSegment\n      {...options}\n      insets={insets}\n      layout={layout}\n      scene={scene}\n      title={title}\n      leftLabel={leftLabel}\n      headerTitle={\n        typeof options.headerTitle !== 'function'\n          ? (props: StackHeaderTitleProps) => {\n              // @ts-ignore\n              return <HeaderTitle {...props} />;\n            }\n          : options.headerTitle\n      }\n      onGoBack={previous ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n\nObject.defineProperty(Header, 'HEIGHT', {\n  get() {\n    console.warn(\n      \"Deprecation in 'createStackNavigator': 'Header.HEIGHT' will be removed in a future version. Use 'useHeaderHeight' or 'HeaderHeightContext' instead\"\n    );\n\n    return getDefaultHeaderHeight(\n      Dimensions.get('window'),\n      getStatusBarHeight(true)\n    );\n  },\n});\n\nexport default Header;\n"]},"metadata":{},"sourceType":"script"}