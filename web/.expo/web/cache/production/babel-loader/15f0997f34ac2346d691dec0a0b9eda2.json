{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _defineProperty3=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _hammerjs=_interopRequireDefault(require(\"@egjs/hammerjs\"));var _State=require(\"../State\");var _constants=require(\"./constants\");var _DiscreteGestureHandler=_interopRequireDefault(require(\"./DiscreteGestureHandler\"));var _utils=require(\"./utils\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var PressGestureHandler=function(_DiscreteGestureHandl){(0,_inherits2.default)(PressGestureHandler,_DiscreteGestureHandl);var _super=_createSuper(PressGestureHandler);function PressGestureHandler(){var _this;(0,_classCallCheck2.default)(this,PressGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty((0,_assertThisInitialized2.default)(_this),\"visualFeedbackTimer\",void 0);_defineProperty((0,_assertThisInitialized2.default)(_this),\"initialEvent\",null);_defineProperty((0,_assertThisInitialized2.default)(_this),\"shouldDelayTouches\",true);return _this;}(0,_createClass2.default)(PressGestureHandler,[{key:\"name\",get:function get(){return'press';}},{key:\"minDurationMs\",get:function get(){return(0,_utils.isnan)(this.config.minDurationMs)?5:this.config.minDurationMs;}},{key:\"maxDist\",get:function get(){return(0,_utils.isnan)(this.config.maxDist)?9:this.config.maxDist;}},{key:\"NativeGestureClass\",get:function get(){return _hammerjs.default.Press;}},{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){this.hasGestureFailed=true;this.cancelEvent(inputData);}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(_ref){var shouldCancelWhenOutside=_ref.shouldCancelWhenOutside,maxDistSq=_ref.maxDistSq;return shouldCancelWhenOutside||!(0,_utils.isValidNumber)(maxDistSq);}},{key:\"getState\",value:function getState(type){var _Hammer$INPUT_START$H;return(_Hammer$INPUT_START$H={},(0,_defineProperty3.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_START,_State.State.BEGAN),(0,_defineProperty3.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_MOVE,_State.State.ACTIVE),(0,_defineProperty3.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_END,_State.State.END),(0,_defineProperty3.default)(_Hammer$INPUT_START$H,_hammerjs.default.INPUT_CANCEL,_State.State.CANCELLED),_Hammer$INPUT_START$H)[type];}},{key:\"getConfig\",value:function getConfig(){if(!this.hasCustomActivationCriteria){return{shouldCancelWhenOutside:true,maxDistSq:10};}return this.config;}},{key:\"getHammerConfig\",value:function getHammerConfig(){return(0,_extends2.default)({},(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"getHammerConfig\",this).call(this),{time:this.minDurationMs});}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){this.onGestureStart(ev);}},{key:\"shouldDelayTouchForEvent\",value:function shouldDelayTouchForEvent(_ref2){var pointerType=_ref2.pointerType;return this.shouldDelayTouches&&pointerType==='touch';}},{key:\"onGestureStart\",value:function onGestureStart(ev){var _this2=this;this.isGestureRunning=true;clearTimeout(this.visualFeedbackTimer);this.initialEvent=ev;this.visualFeedbackTimer=(0,_utils.fireAfterInterval)(function(){_this2.sendGestureStartedEvent(_this2.initialEvent);_this2.initialEvent=null;},this.shouldDelayTouchForEvent(ev)&&_constants.CONTENT_TOUCHES_DELAY);}},{key:\"sendGestureStartedEvent\",value:function sendGestureStartedEvent(ev){clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.sendEvent((0,_extends2.default)({},ev,{eventType:_hammerjs.default.INPUT_MOVE,isFirst:true}));}},{key:\"forceInvalidate\",value:function forceInvalidate(event){(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"forceInvalidate\",this).call(this,event);clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.initialEvent=null;}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this3=this;(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(this.isGestureRunning){if(ev.isFinal){var timeout;if(this.visualFeedbackTimer){timeout=_constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;this.sendGestureStartedEvent(this.initialEvent);this.initialEvent=null;}(0,_utils.fireAfterInterval)(function(){_this3.sendEvent((0,_extends2.default)({},ev,{eventType:_hammerjs.default.INPUT_END,isFinal:true}));_this3.onGestureEnded();},timeout);}else{this.sendEvent((0,_extends2.default)({},ev,{eventType:_hammerjs.default.INPUT_MOVE,isFinal:false}));}}}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$shouldActivateO=_ref3.shouldActivateOnStart,shouldActivateOnStart=_ref3$shouldActivateO===void 0?false:_ref3$shouldActivateO,_ref3$disallowInterru=_ref3.disallowInterruption,disallowInterruption=_ref3$disallowInterru===void 0?false:_ref3$disallowInterru,_ref3$shouldCancelWhe=_ref3.shouldCancelWhenOutside,shouldCancelWhenOutside=_ref3$shouldCancelWhe===void 0?true:_ref3$shouldCancelWhe,_ref3$minDurationMs=_ref3.minDurationMs,minDurationMs=_ref3$minDurationMs===void 0?Number.NaN:_ref3$minDurationMs,_ref3$maxDist=_ref3.maxDist,maxDist=_ref3$maxDist===void 0?Number.NaN:_ref3$maxDist,_ref3$minPointers=_ref3.minPointers,minPointers=_ref3$minPointers===void 0?1:_ref3$minPointers,_ref3$maxPointers=_ref3.maxPointers,maxPointers=_ref3$maxPointers===void 0?1:_ref3$maxPointers,props=(0,_objectWithoutProperties2.default)(_ref3,[\"shouldActivateOnStart\",\"disallowInterruption\",\"shouldCancelWhenOutside\",\"minDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"]);return(0,_get2.default)((0,_getPrototypeOf2.default)(PressGestureHandler.prototype),\"updateGestureConfig\",this).call(this,(0,_extends2.default)({shouldActivateOnStart:shouldActivateOnStart,disallowInterruption:disallowInterruption,shouldCancelWhenOutside:shouldCancelWhenOutside,minDurationMs:minDurationMs,maxDist:maxDist,minPointers:minPointers,maxPointers:maxPointers},props));}}]);return PressGestureHandler;}(_DiscreteGestureHandler.default);var _default=PressGestureHandler;exports.default=_default;","map":{"version":3,"sources":["PressGestureHandler.ts"],"names":["name","minDurationMs","isnan","maxDist","NativeGestureClass","Hammer","simulateCancelEvent","updateHasCustomActivationCriteria","maxDistSq","shouldCancelWhenOutside","isValidNumber","getState","State","CANCELLED","getConfig","getHammerConfig","time","onGestureActivated","shouldDelayTouchForEvent","pointerType","onGestureStart","clearTimeout","fireAfterInterval","sendGestureStartedEvent","eventType","isFirst","forceInvalidate","onRawEvent","ev","timeout","isFinal","updateGestureConfig","shouldActivateOnStart","disallowInterruption","Number","minPointers","maxPointers","props"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n  HammerInputNames,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { Config, HammerInputExt } from './GestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  private visualFeedbackTimer: any;\n  private initialEvent: HammerInputExt | null = null;\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    // @ts-ignore FIXME(TS)\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({\n    shouldCancelWhenOutside,\n    maxDistSq,\n  }: Config & { shouldCancelWhenOutside: boolean }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type: keyof typeof HammerInputNames): State {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }: HammerInputExt) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev: HammerInputExt) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev: HammerInputExt) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event: HammerInputExt) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.isGestureRunning) {\n      if (ev.isFinal) {\n        let timeout;\n        if (this.visualFeedbackTimer) {\n          // Aesthetic timing for a quick tap.\n          // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n          // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n          timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n          this.sendGestureStartedEvent(this.initialEvent as HammerInputExt);\n          this.initialEvent = null;\n        }\n        fireAfterInterval(() => {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.INPUT_END,\n            isFinal: true,\n          });\n          // @ts-ignore -- this should explicitly support undefined\n          this.onGestureEnded();\n        }, timeout);\n      } else {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_MOVE,\n          isFinal: false,\n        });\n      }\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"]},"metadata":{},"sourceType":"script"}