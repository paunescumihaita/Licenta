{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();exports.default=grid;function isSimplePositionValue(value){return typeof value==='number'&&!isNaN(value);}function isComplexSpanValue(value){return typeof value==='string'&&value.includes('/');}var alignmentValues=['center','end','start','stretch'];var displayValues={'inline-grid':['-ms-inline-grid','inline-grid'],grid:['-ms-grid','grid']};var propertyConverters={alignSelf:function alignSelf(value,style){if(alignmentValues.indexOf(value)>-1){style.msGridRowAlign=value;}},gridColumn:function gridColumn(value,style){if(isSimplePositionValue(value)){style.msGridColumn=value;}else if(isComplexSpanValue(value)){var _value$split=value.split('/'),_value$split2=_slicedToArray(_value$split,2),start=_value$split2[0],end=_value$split2[1];propertyConverters.gridColumnStart(+start,style);var _end$split=end.split(/ ?span /),_end$split2=_slicedToArray(_end$split,2),maybeSpan=_end$split2[0],maybeNumber=_end$split2[1];if(maybeSpan===''){propertyConverters.gridColumnEnd(+start+ +maybeNumber,style);}else{propertyConverters.gridColumnEnd(+end,style);}}else{propertyConverters.gridColumnStart(value,style);}},gridColumnEnd:function gridColumnEnd(value,style){var msGridColumn=style.msGridColumn;if(isSimplePositionValue(value)&&isSimplePositionValue(msGridColumn)){style.msGridColumnSpan=value-msGridColumn;}},gridColumnStart:function gridColumnStart(value,style){if(isSimplePositionValue(value)){style.msGridColumn=value;}},gridRow:function gridRow(value,style){if(isSimplePositionValue(value)){style.msGridRow=value;}else if(isComplexSpanValue(value)){var _value$split3=value.split('/'),_value$split4=_slicedToArray(_value$split3,2),start=_value$split4[0],end=_value$split4[1];propertyConverters.gridRowStart(+start,style);var _end$split3=end.split(/ ?span /),_end$split4=_slicedToArray(_end$split3,2),maybeSpan=_end$split4[0],maybeNumber=_end$split4[1];if(maybeSpan===''){propertyConverters.gridRowEnd(+start+ +maybeNumber,style);}else{propertyConverters.gridRowEnd(+end,style);}}else{propertyConverters.gridRowStart(value,style);}},gridRowEnd:function gridRowEnd(value,style){var msGridRow=style.msGridRow;if(isSimplePositionValue(value)&&isSimplePositionValue(msGridRow)){style.msGridRowSpan=value-msGridRow;}},gridRowStart:function gridRowStart(value,style){if(isSimplePositionValue(value)){style.msGridRow=value;}},gridTemplateColumns:function gridTemplateColumns(value,style){style.msGridColumns=value;},gridTemplateRows:function gridTemplateRows(value,style){style.msGridRows=value;},justifySelf:function justifySelf(value,style){if(alignmentValues.indexOf(value)>-1){style.msGridColumnAlign=value;}}};function grid(property,value,style){if(property==='display'&&value in displayValues){return displayValues[value];}if(property in propertyConverters){var propertyConverter=propertyConverters[property];propertyConverter(value,style);}}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Aplicatie/Licenta/web/node_modules/react-native-web/node_modules/inline-style-prefixer/lib/plugins/grid.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","default","grid","isSimplePositionValue","isNaN","isComplexSpanValue","includes","alignmentValues","displayValues","propertyConverters","alignSelf","style","indexOf","msGridRowAlign","gridColumn","msGridColumn","_value$split","split","_value$split2","start","end","gridColumnStart","_end$split","_end$split2","maybeSpan","maybeNumber","gridColumnEnd","msGridColumnSpan","gridRow","msGridRow","_value$split3","_value$split4","gridRowStart","_end$split3","_end$split4","gridRowEnd","msGridRowSpan","gridTemplateColumns","msGridColumns","gridTemplateRows","msGridRows","justifySelf","msGridColumnAlign","property","propertyConverter"],"mappings":"AAAA,aAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CC,KAAK,CAAE,IADoC,CAA7C,EAIA,GAAIC,CAAAA,cAAc,CAAG,UAAY,CAAE,QAASC,CAAAA,aAAT,CAAuBC,GAAvB,CAA4BC,CAA5B,CAA+B,CAAE,GAAIC,CAAAA,IAAI,CAAG,EAAX,CAAe,GAAIC,CAAAA,EAAE,CAAG,IAAT,CAAe,GAAIC,CAAAA,EAAE,CAAG,KAAT,CAAgB,GAAIC,CAAAA,EAAE,CAAGC,SAAT,CAAoB,GAAI,CAAE,IAAK,GAAIC,CAAAA,EAAE,CAAGP,GAAG,CAACQ,MAAM,CAACC,QAAR,CAAH,EAAT,CAAiCC,EAAtC,CAA0C,EAAEP,EAAE,CAAG,CAACO,EAAE,CAAGH,EAAE,CAACI,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,CAAyET,EAAE,CAAG,IAA9E,CAAoF,CAAED,IAAI,CAACW,IAAL,CAAUH,EAAE,CAACb,KAAb,EAAqB,GAAII,CAAC,EAAIC,IAAI,CAACY,MAAL,GAAgBb,CAAzB,CAA4B,MAAQ,CAAE,CAAC,MAAOc,GAAP,CAAY,CAAEX,EAAE,CAAG,IAAL,CAAWC,EAAE,CAAGU,GAAL,CAAW,CAA5L,OAAqM,CAAE,GAAI,CAAE,GAAI,CAACZ,EAAD,EAAOI,EAAE,CAAC,QAAD,CAAb,CAAyBA,EAAE,CAAC,QAAD,CAAF,GAAiB,CAAhD,OAAyD,CAAE,GAAIH,EAAJ,CAAQ,KAAMC,CAAAA,EAAN,CAAW,CAAE,CAAC,MAAOH,CAAAA,IAAP,CAAc,CAAC,MAAO,UAAUF,GAAV,CAAeC,CAAf,CAAkB,CAAE,GAAIe,KAAK,CAACC,OAAN,CAAcjB,GAAd,CAAJ,CAAwB,CAAE,MAAOA,CAAAA,GAAP,CAAa,CAAvC,IAA6C,IAAIQ,MAAM,CAACC,QAAP,GAAmBf,CAAAA,MAAM,CAACM,GAAD,CAA7B,CAAoC,CAAE,MAAOD,CAAAA,aAAa,CAACC,GAAD,CAAMC,CAAN,CAApB,CAA+B,CAArE,IAA2E,CAAE,KAAM,IAAIiB,CAAAA,SAAJ,CAAc,sDAAd,CAAN,CAA8E,CAAE,CAArO,CAAwO,CAAhoB,EAArB,CAEAtB,OAAO,CAACuB,OAAR,CAAkBC,IAAlB,CACA,QAASC,CAAAA,qBAAT,CAA+BxB,KAA/B,CAAsC,CACpC,MAAO,OAAOA,CAAAA,KAAP,GAAiB,QAAjB,EAA6B,CAACyB,KAAK,CAACzB,KAAD,CAA1C,CACD,CAED,QAAS0B,CAAAA,kBAAT,CAA4B1B,KAA5B,CAAmC,CACjC,MAAO,OAAOA,CAAAA,KAAP,GAAiB,QAAjB,EAA6BA,KAAK,CAAC2B,QAAN,CAAe,GAAf,CAApC,CACD,CAED,GAAIC,CAAAA,eAAe,CAAG,CAAC,QAAD,CAAW,KAAX,CAAkB,OAAlB,CAA2B,SAA3B,CAAtB,CAEA,GAAIC,CAAAA,aAAa,CAAG,CAClB,cAAe,CAAC,iBAAD,CAAoB,aAApB,CADG,CAElBN,IAAI,CAAE,CAAC,UAAD,CAAa,MAAb,CAFY,CAApB,CAKA,GAAIO,CAAAA,kBAAkB,CAAG,CACvBC,SAAS,CAAE,QAASA,CAAAA,SAAT,CAAmB/B,KAAnB,CAA0BgC,KAA1B,CAAiC,CAC1C,GAAIJ,eAAe,CAACK,OAAhB,CAAwBjC,KAAxB,EAAiC,CAAC,CAAtC,CAAyC,CACvCgC,KAAK,CAACE,cAAN,CAAuBlC,KAAvB,CACD,CACF,CALsB,CAOvBmC,UAAU,CAAE,QAASA,CAAAA,UAAT,CAAoBnC,KAApB,CAA2BgC,KAA3B,CAAkC,CAC5C,GAAIR,qBAAqB,CAACxB,KAAD,CAAzB,CAAkC,CAChCgC,KAAK,CAACI,YAAN,CAAqBpC,KAArB,CACD,CAFD,IAEO,IAAI0B,kBAAkB,CAAC1B,KAAD,CAAtB,CAA+B,CACpC,GAAIqC,CAAAA,YAAY,CAAGrC,KAAK,CAACsC,KAAN,CAAY,GAAZ,CAAnB,CACIC,aAAa,CAAGtC,cAAc,CAACoC,YAAD,CAAe,CAAf,CADlC,CAEIG,KAAK,CAAGD,aAAa,CAAC,CAAD,CAFzB,CAGIE,GAAG,CAAGF,aAAa,CAAC,CAAD,CAHvB,CAKAT,kBAAkB,CAACY,eAAnB,CAAmC,CAACF,KAApC,CAA2CR,KAA3C,EAEA,GAAIW,CAAAA,UAAU,CAAGF,GAAG,CAACH,KAAJ,CAAU,SAAV,CAAjB,CACIM,WAAW,CAAG3C,cAAc,CAAC0C,UAAD,CAAa,CAAb,CADhC,CAEIE,SAAS,CAAGD,WAAW,CAAC,CAAD,CAF3B,CAGIE,WAAW,CAAGF,WAAW,CAAC,CAAD,CAH7B,CAKA,GAAIC,SAAS,GAAK,EAAlB,CAAsB,CACpBf,kBAAkB,CAACiB,aAAnB,CAAiC,CAACP,KAAD,CAAS,EAACM,WAA3C,CAAwDd,KAAxD,EACD,CAFD,IAEO,CACLF,kBAAkB,CAACiB,aAAnB,CAAiC,CAACN,GAAlC,CAAuCT,KAAvC,EACD,CACF,CAlBM,IAkBA,CACLF,kBAAkB,CAACY,eAAnB,CAAmC1C,KAAnC,CAA0CgC,KAA1C,EACD,CACF,CA/BsB,CAiCvBe,aAAa,CAAE,QAASA,CAAAA,aAAT,CAAuB/C,KAAvB,CAA8BgC,KAA9B,CAAqC,CAClD,GAAII,CAAAA,YAAY,CAAGJ,KAAK,CAACI,YAAzB,CAEA,GAAIZ,qBAAqB,CAACxB,KAAD,CAArB,EAAgCwB,qBAAqB,CAACY,YAAD,CAAzD,CAAyE,CACvEJ,KAAK,CAACgB,gBAAN,CAAyBhD,KAAK,CAAGoC,YAAjC,CACD,CACF,CAvCsB,CAyCvBM,eAAe,CAAE,QAASA,CAAAA,eAAT,CAAyB1C,KAAzB,CAAgCgC,KAAhC,CAAuC,CACtD,GAAIR,qBAAqB,CAACxB,KAAD,CAAzB,CAAkC,CAChCgC,KAAK,CAACI,YAAN,CAAqBpC,KAArB,CACD,CACF,CA7CsB,CA+CvBiD,OAAO,CAAE,QAASA,CAAAA,OAAT,CAAiBjD,KAAjB,CAAwBgC,KAAxB,CAA+B,CACtC,GAAIR,qBAAqB,CAACxB,KAAD,CAAzB,CAAkC,CAChCgC,KAAK,CAACkB,SAAN,CAAkBlD,KAAlB,CACD,CAFD,IAEO,IAAI0B,kBAAkB,CAAC1B,KAAD,CAAtB,CAA+B,CACpC,GAAImD,CAAAA,aAAa,CAAGnD,KAAK,CAACsC,KAAN,CAAY,GAAZ,CAApB,CACIc,aAAa,CAAGnD,cAAc,CAACkD,aAAD,CAAgB,CAAhB,CADlC,CAEIX,KAAK,CAAGY,aAAa,CAAC,CAAD,CAFzB,CAGIX,GAAG,CAAGW,aAAa,CAAC,CAAD,CAHvB,CAKAtB,kBAAkB,CAACuB,YAAnB,CAAgC,CAACb,KAAjC,CAAwCR,KAAxC,EAEA,GAAIsB,CAAAA,WAAW,CAAGb,GAAG,CAACH,KAAJ,CAAU,SAAV,CAAlB,CACIiB,WAAW,CAAGtD,cAAc,CAACqD,WAAD,CAAc,CAAd,CADhC,CAEIT,SAAS,CAAGU,WAAW,CAAC,CAAD,CAF3B,CAGIT,WAAW,CAAGS,WAAW,CAAC,CAAD,CAH7B,CAKA,GAAIV,SAAS,GAAK,EAAlB,CAAsB,CACpBf,kBAAkB,CAAC0B,UAAnB,CAA8B,CAAChB,KAAD,CAAS,EAACM,WAAxC,CAAqDd,KAArD,EACD,CAFD,IAEO,CACLF,kBAAkB,CAAC0B,UAAnB,CAA8B,CAACf,GAA/B,CAAoCT,KAApC,EACD,CACF,CAlBM,IAkBA,CACLF,kBAAkB,CAACuB,YAAnB,CAAgCrD,KAAhC,CAAuCgC,KAAvC,EACD,CACF,CAvEsB,CAyEvBwB,UAAU,CAAE,QAASA,CAAAA,UAAT,CAAoBxD,KAApB,CAA2BgC,KAA3B,CAAkC,CAC5C,GAAIkB,CAAAA,SAAS,CAAGlB,KAAK,CAACkB,SAAtB,CAEA,GAAI1B,qBAAqB,CAACxB,KAAD,CAArB,EAAgCwB,qBAAqB,CAAC0B,SAAD,CAAzD,CAAsE,CACpElB,KAAK,CAACyB,aAAN,CAAsBzD,KAAK,CAAGkD,SAA9B,CACD,CACF,CA/EsB,CAiFvBG,YAAY,CAAE,QAASA,CAAAA,YAAT,CAAsBrD,KAAtB,CAA6BgC,KAA7B,CAAoC,CAChD,GAAIR,qBAAqB,CAACxB,KAAD,CAAzB,CAAkC,CAChCgC,KAAK,CAACkB,SAAN,CAAkBlD,KAAlB,CACD,CACF,CArFsB,CAuFvB0D,mBAAmB,CAAE,QAASA,CAAAA,mBAAT,CAA6B1D,KAA7B,CAAoCgC,KAApC,CAA2C,CAC9DA,KAAK,CAAC2B,aAAN,CAAsB3D,KAAtB,CACD,CAzFsB,CA2FvB4D,gBAAgB,CAAE,QAASA,CAAAA,gBAAT,CAA0B5D,KAA1B,CAAiCgC,KAAjC,CAAwC,CACxDA,KAAK,CAAC6B,UAAN,CAAmB7D,KAAnB,CACD,CA7FsB,CA+FvB8D,WAAW,CAAE,QAASA,CAAAA,WAAT,CAAqB9D,KAArB,CAA4BgC,KAA5B,CAAmC,CAC9C,GAAIJ,eAAe,CAACK,OAAhB,CAAwBjC,KAAxB,EAAiC,CAAC,CAAtC,CAAyC,CACvCgC,KAAK,CAAC+B,iBAAN,CAA0B/D,KAA1B,CACD,CACF,CAnGsB,CAAzB,CAsGA,QAASuB,CAAAA,IAAT,CAAcyC,QAAd,CAAwBhE,KAAxB,CAA+BgC,KAA/B,CAAsC,CACpC,GAAIgC,QAAQ,GAAK,SAAb,EAA0BhE,KAAK,GAAI6B,CAAAA,aAAvC,CAAsD,CACpD,MAAOA,CAAAA,aAAa,CAAC7B,KAAD,CAApB,CACD,CAED,GAAIgE,QAAQ,GAAIlC,CAAAA,kBAAhB,CAAoC,CAClC,GAAImC,CAAAA,iBAAiB,CAAGnC,kBAAkB,CAACkC,QAAD,CAA1C,CACAC,iBAAiB,CAACjE,KAAD,CAAQgC,KAAR,CAAjB,CACD,CACF","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = grid;\nfunction isSimplePositionValue(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nfunction isComplexSpanValue(value) {\n  return typeof value === 'string' && value.includes('/');\n}\n\nvar alignmentValues = ['center', 'end', 'start', 'stretch'];\n\nvar displayValues = {\n  'inline-grid': ['-ms-inline-grid', 'inline-grid'],\n  grid: ['-ms-grid', 'grid']\n};\n\nvar propertyConverters = {\n  alignSelf: function alignSelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridRowAlign = value;\n    }\n  },\n\n  gridColumn: function gridColumn(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split = value.split('/'),\n          _value$split2 = _slicedToArray(_value$split, 2),\n          start = _value$split2[0],\n          end = _value$split2[1];\n\n      propertyConverters.gridColumnStart(+start, style);\n\n      var _end$split = end.split(/ ?span /),\n          _end$split2 = _slicedToArray(_end$split, 2),\n          maybeSpan = _end$split2[0],\n          maybeNumber = _end$split2[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridColumnEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridColumnEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridColumnStart(value, style);\n    }\n  },\n\n  gridColumnEnd: function gridColumnEnd(value, style) {\n    var msGridColumn = style.msGridColumn;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridColumn)) {\n      style.msGridColumnSpan = value - msGridColumn;\n    }\n  },\n\n  gridColumnStart: function gridColumnStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    }\n  },\n\n  gridRow: function gridRow(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split3 = value.split('/'),\n          _value$split4 = _slicedToArray(_value$split3, 2),\n          start = _value$split4[0],\n          end = _value$split4[1];\n\n      propertyConverters.gridRowStart(+start, style);\n\n      var _end$split3 = end.split(/ ?span /),\n          _end$split4 = _slicedToArray(_end$split3, 2),\n          maybeSpan = _end$split4[0],\n          maybeNumber = _end$split4[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridRowEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridRowEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridRowStart(value, style);\n    }\n  },\n\n  gridRowEnd: function gridRowEnd(value, style) {\n    var msGridRow = style.msGridRow;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridRow)) {\n      style.msGridRowSpan = value - msGridRow;\n    }\n  },\n\n  gridRowStart: function gridRowStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    }\n  },\n\n  gridTemplateColumns: function gridTemplateColumns(value, style) {\n    style.msGridColumns = value;\n  },\n\n  gridTemplateRows: function gridTemplateRows(value, style) {\n    style.msGridRows = value;\n  },\n\n  justifySelf: function justifySelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridColumnAlign = value;\n    }\n  }\n};\n\nfunction grid(property, value, style) {\n  if (property === 'display' && value in displayValues) {\n    return displayValues[value];\n  }\n\n  if (property in propertyConverters) {\n    var propertyConverter = propertyConverters[property];\n    propertyConverter(value, style);\n  }\n}"]},"metadata":{},"sourceType":"script"}