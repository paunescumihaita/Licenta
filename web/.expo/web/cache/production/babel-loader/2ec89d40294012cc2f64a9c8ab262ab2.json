{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var NavigationActions=_interopRequireWildcard(require(\"../NavigationActions\"));var _invariant=_interopRequireDefault(require(\"../utils/invariant\"));var getNavigationActionCreators=function getNavigationActionCreators(route){return{goBack:function goBack(key){var actualizedKey=key;if(key===undefined&&route.key){(0,_invariant.default)(typeof route.key==='string','key should be a string');actualizedKey=route.key;}return NavigationActions.back({key:actualizedKey});},navigate:function navigate(navigateTo,params,action){if(typeof navigateTo==='string'){return NavigationActions.navigate({routeName:navigateTo,params:params,action:action});}(0,_invariant.default)(typeof navigateTo==='object','Must navigateTo an object or a string');(0,_invariant.default)(params==null,'Params must not be provided to .navigate() when specifying an object');(0,_invariant.default)(action==null,'Child action must not be provided to .navigate() when specifying an object');return NavigationActions.navigate(navigateTo);},setParams:function setParams(params){(0,_invariant.default)(route.key&&typeof route.key==='string','setParams cannot be called by root navigator');return NavigationActions.setParams({params:params,key:route.key});}};};var _default=getNavigationActionCreators;exports.default=_default;","map":{"version":3,"sources":["getNavigationActionCreators.ts"],"names":["getNavigationActionCreators","route","goBack","key","actualizedKey","invariant","navigate","routeName","params","action","NavigationActions","setParams"],"mappings":"wPAAA,+EACA,qEAOA,GAAMA,CAAAA,2BAA2B,CAAIC,QAA/BD,CAAAA,2BAA+BC,CAAAA,KAAD,CAAgB,CAClD,MAAO,CACLC,MAAM,CAAGC,gBAAAA,GAAD,CAAyB,CAC/B,GAAIC,CAAAA,aAAa,CAAjB,GAAA,CACA,GAAID,GAAG,GAAHA,SAAAA,EAAqBF,KAAK,CAA9B,GAAA,CAAoC,CAClCI,uBAAU,MAAOJ,CAAAA,KAAK,CAAZ,GAAA,GAAD,QAATI,CAAAA,wBAAAA,EACAD,aAAa,CAAGH,KAAK,CAArBG,GAAAA,CACD,CACD,MAAO,CAAA,iBAAiB,CAAjB,IAAA,CAAuB,CAAED,GAAG,CAAEC,aAAP,CAAvB,CAAP,CAPG,CAAA,CASLE,QAAQ,CAAE,kBAAA,UAAA,CAAA,MAAA,CAAA,MAAA,CAIL,CACH,GAAI,MAAA,CAAA,UAAA,GAAJ,QAAA,CAAoC,CAClC,MAAO,CAAA,iBAAiB,CAAjB,QAAA,CAA2B,CAChCC,SAAS,CADuB,UAAA,CAEhCC,MAFgC,CAEhCA,MAFgC,CAGhCC,MAAAA,CAAAA,MAHgC,CAA3B,CAAP,CAKD,CACDJ,uBACE,MAAA,CAAA,UAAA,GADO,QAATA,CAAAA,uCAAAA,EAIAA,uBACEG,MAAM,EADC,IAATH,CAAAA,sEAAAA,EAIAA,uBACEI,MAAM,EADC,IAATJ,CAAAA,4EAAAA,EAIA,MAAOK,CAAAA,iBAAiB,CAAjBA,QAAAA,CAAP,UAAOA,CAAP,CAjCG,CAAA,CAmCLC,SAAS,CAAGH,mBAAAA,MAAD,CAA+B,CACxCH,uBACEJ,KAAK,CAALA,GAAAA,EAAa,MAAOA,CAAAA,KAAK,CAAZ,GAAA,GADN,QAATI,CAAAA,8CAAAA,EAIA,MAAO,CAAA,iBAAiB,CAAjB,SAAA,CAA4B,CAAEG,MAAF,CAAEA,MAAF,CAAUL,GAAG,CAAEF,KAAK,CAACE,GAArB,CAA5B,CAAP,CACD,CAzCI,CAAP,CADF,CAAA,C,aA8CA,2B","sourcesContent":["import * as NavigationActions from '../NavigationActions';\nimport invariant from '../utils/invariant';\n\ninterface NavigationParams {\n  [key: string]: any;\n}\n\n// TODO: Type `route`\nconst getNavigationActionCreators = (route: any) => {\n  return {\n    goBack: (key?: string | null) => {\n      let actualizedKey = key;\n      if (key === undefined && route.key) {\n        invariant(typeof route.key === 'string', 'key should be a string');\n        actualizedKey = route.key;\n      }\n      return NavigationActions.back({ key: actualizedKey });\n    },\n    navigate: (\n      navigateTo: string | NavigationActions.NavigationNavigateActionPayload,\n      params?: NavigationParams,\n      action?: NavigationActions.NavigationNavigateAction\n    ) => {\n      if (typeof navigateTo === 'string') {\n        return NavigationActions.navigate({\n          routeName: navigateTo,\n          params,\n          action,\n        });\n      }\n      invariant(\n        typeof navigateTo === 'object',\n        'Must navigateTo an object or a string'\n      );\n      invariant(\n        params == null,\n        'Params must not be provided to .navigate() when specifying an object'\n      );\n      invariant(\n        action == null,\n        'Child action must not be provided to .navigate() when specifying an object'\n      );\n      return NavigationActions.navigate(navigateTo);\n    },\n    setParams: (params?: NavigationParams) => {\n      invariant(\n        route.key && typeof route.key === 'string',\n        'setParams cannot be called by root navigator'\n      );\n      return NavigationActions.setParams({ params, key: route.key });\n    },\n  };\n};\n\nexport default getNavigationActionCreators;\n"]},"metadata":{},"sourceType":"script"}