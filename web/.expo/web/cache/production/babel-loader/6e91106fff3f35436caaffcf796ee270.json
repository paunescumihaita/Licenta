{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _GestureHandler2=_interopRequireDefault(require(\"./GestureHandler\"));var _utils=require(\"./utils\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var DiscreteGestureHandler=function(_GestureHandler){(0,_inherits2.default)(DiscreteGestureHandler,_GestureHandler);var _super=_createSuper(DiscreteGestureHandler);function DiscreteGestureHandler(){(0,_classCallCheck2.default)(this,DiscreteGestureHandler);return _super.apply(this,arguments);}(0,_createClass2.default)(DiscreteGestureHandler,[{key:\"isDiscrete\",get:function get(){return true;}},{key:\"shouldEnableGestureOnSetup\",get:function get(){return true;}},{key:\"shouldFailUnderCustomCriteria\",value:function shouldFailUnderCustomCriteria(_ref,_ref2){var x=_ref.x,y=_ref.y,deltaX=_ref.deltaX,deltaY=_ref.deltaY;var maxDeltaX=_ref2.maxDeltaX,maxDeltaY=_ref2.maxDeltaY,maxDistSq=_ref2.maxDistSq,shouldCancelWhenOutside=_ref2.shouldCancelWhenOutside;if(shouldCancelWhenOutside){if(!this.isPointInView({x:x,y:y})){return true;}}return(0,_utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaX),maxDeltaX)||(0,_utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY),maxDeltaY)||(0,_utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY*deltaY+deltaX*deltaX),maxDistSq);}},{key:\"transformNativeEvent\",value:function transformNativeEvent(_ref3){var _ref3$center=_ref3.center,x=_ref3$center.x,y=_ref3$center.y;var rect=this.view.getBoundingClientRect();return{absoluteX:x,absoluteY:y,x:x-rect.left,y:y-rect.top};}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(_ref4,_recognizer,_ref5){var minPointers=_ref4.minPointers,maxPointers=_ref4.maxPointers,maxDeltaX=_ref4.maxDeltaX,maxDeltaY=_ref4.maxDeltaY,maxDistSq=_ref4.maxDistSq,shouldCancelWhenOutside=_ref4.shouldCancelWhenOutside;var pointerLength=_ref5.maxPointers,center=_ref5.center,deltaX=_ref5.deltaX,deltaY=_ref5.deltaY;var validPointerCount=pointerLength>=minPointers&&pointerLength<=maxPointers;if(this.shouldFailUnderCustomCriteria((0,_extends2.default)({},center,{deltaX:deltaX,deltaY:deltaY}),{maxDeltaX:maxDeltaX,maxDeltaY:maxDeltaY,maxDistSq:maxDistSq,shouldCancelWhenOutside:shouldCancelWhenOutside})||!validPointerCount&&this.isGestureRunning){return{failed:true};}return{success:validPointerCount};}}]);return DiscreteGestureHandler;}(_GestureHandler2.default);var _default=DiscreteGestureHandler;exports.default=_default;","map":{"version":3,"sources":["DiscreteGestureHandler.ts"],"names":["isDiscrete","shouldEnableGestureOnSetup","shouldFailUnderCustomCriteria","deltaY","shouldCancelWhenOutside","x","y","TEST_MAX_IF_NOT_NAN","Math","deltaX","transformNativeEvent","center","rect","absoluteX","absoluteY","top","isGestureEnabledForEvent","maxPointers","validPointerCount","pointerLength","maxDeltaX","maxDeltaY","maxDistSq","failed","success"],"mappings":"6sBAEA,yEACA,8B,2tBAEA,CAAA,sB,mVACMA,cAAa,CACf,MAAA,KAAA,CACD,C,wCAEGC,cAA6B,CAC/B,MAAA,KAAA,CACD,C,6CAEDC,kDAGE,IAFA,CAAA,CAEA,MAFA,CAEA,CAFA,CAEA,MAFA,CAEA,CAFA,MAEA,MAFA,MAEA,CAFgBC,MAEhB,MAFgBA,MAEhB,IADA,CAAA,SACA,OADA,SACA,CADA,SACA,OADA,SACA,CADA,SACA,OADA,SACA,CADmCC,uBACnC,OADmCA,uBACnC,CACA,GAAA,uBAAA,CAA6B,CAC3B,GAAI,CAAC,KAAA,aAAA,CAAmB,CAAEC,CAAF,CAAEA,CAAF,CAAKC,CAAAA,CAAAA,CAAL,CAAnB,CAAL,CAAmC,CACjC,MAAA,KAAA,CACD,CACF,CACD,MACEC,+BAAoBC,IAAI,CAAJA,GAAAA,CAAD,MAACA,CAApBD,CAAAA,SAAAA,GACAA,+BAAoBC,IAAI,CAAJA,GAAAA,CAAD,MAACA,CAApBD,CADAA,SACAA,CADAA,EAEAA,+BACEC,IAAI,CAAJA,GAAAA,CAASL,MAAM,CAANA,MAAAA,CAAkBM,MAAM,CADhB,MACjBD,CADFD,CAHF,SAGEA,CAHF,CAQD,C,oCAEDG,oCAAgD,wBAAzBC,MAAyB,CAAjB,CAAiB,cAAjB,CAAiB,CAAZL,CAAY,cAAZA,CAAY,CAE9C,GAAMM,CAAAA,IAAI,CAAG,KAAA,IAAA,CAAb,qBAAa,EAAb,CAEA,MAAO,CACLC,SAAS,CADJ,CAAA,CAELC,SAAS,CAFJ,CAAA,CAGLT,CAAC,CAAEA,CAAC,CAAGO,IAAI,CAHN,IAAA,CAILN,CAAC,CAAEA,CAAC,CAAGM,IAAI,CAACG,GAJP,CAAP,CAMD,C,wCAEDC,wCAAwB,WAAxBA,OAWE,IAVA,CAAA,WAUA,OAVA,WAUA,CAVA,WAUA,OAVA,WAUA,CAVA,SAUA,OAVA,SAUA,CAVA,SAUA,OAVA,SAUA,CAVA,SAUA,OAVA,SAUA,CAJEZ,uBAIF,OAJEA,uBAIF,IADA,CAAA,aACA,OADEa,WACF,CADA,MACA,OADA,MACA,CADA,MACA,OADA,MACA,CAD8Cd,MAC9C,OAD8CA,MAC9C,CACA,GAAMe,CAAAA,iBAAiB,CACrBC,aAAa,EAAbA,WAAAA,EAAgCA,aAAa,EAD/C,WAAA,CAGA,GACE,KAAA,6BAAA,0BACE,MADF,EACeV,MAAb,CAAaA,MADf,CACuBN,MAAAA,CAAAA,MADvB,GAEE,CACEiB,SADF,CACEA,SADF,CAEEC,SAFF,CAEEA,SAFF,CAGEC,SAHF,CAGEA,SAHF,CAIElB,uBAAAA,CAAAA,uBAJF,CAFF,GAWC,CAAA,iBAAA,EAAsB,KAZzB,gBAAA,CAaE,CACA,MAAO,CAAEmB,MAAM,CAAE,IAAV,CAAP,CACD,CAED,MAAO,CAAEC,OAAO,CAAEN,iBAAX,CAAP,CACD,C,oCAzEH,wB,eA4EA,sB","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nabstract class DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY }: any,\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }: any\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(\n        Math.abs(deltaY * deltaY + deltaX * deltaX),\n        maxDistSq\n      )\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }: any) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength, center, deltaX, deltaY }: any\n  ) {\n    const validPointerCount =\n      pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"script"}